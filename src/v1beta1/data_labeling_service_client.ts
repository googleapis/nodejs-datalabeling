// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **

import * as gax from 'google-gax';
import {
  APICallback,
  Callback,
  CallOptions,
  Descriptors,
  ClientOptions,
  LROperation,
  PaginationCallback,
  PaginationResponse,
} from 'google-gax';
import * as path from 'path';

import {Transform} from 'stream';
import * as protosTypes from '../../protos/protos';
import * as gapicConfig from './data_labeling_service_client_config.json';

const version = require('../../../package.json').version;

/**
 * @class
 * @memberof v1beta1
 */
export class DataLabelingServiceClient {
  private _descriptors: Descriptors = {page: {}, stream: {}, longrunning: {}};
  private _innerApiCalls: {[name: string]: Function};
  private _pathTemplates: {[name: string]: gax.PathTemplate};
  private _terminated = false;
  auth: gax.GoogleAuth;
  operationsClient: gax.OperationsClient;
  dataLabelingServiceStub: Promise<{[name: string]: Function}>;

  /**
   * Construct an instance of DataLabelingServiceClient.
   *
   * @param {object} [options] - The configuration object. See the subsequent
   *   parameters for more details.
   * @param {object} [options.credentials] - Credentials object.
   * @param {string} [options.credentials.client_email]
   * @param {string} [options.credentials.private_key]
   * @param {string} [options.email] - Account email address. Required when
   *     using a .pem or .p12 keyFilename.
   * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
   *     .p12 key downloaded from the Google Developers Console. If you provide
   *     a path to a JSON file, the projectId option below is not necessary.
   *     NOTE: .pem and .p12 require you to specify options.email as well.
   * @param {number} [options.port] - The port on which to connect to
   *     the remote host.
   * @param {string} [options.projectId] - The project ID from the Google
   *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
   *     the environment variable GCLOUD_PROJECT for your project ID. If your
   *     app is running in an environment which supports
   *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
   *     your project ID will be detected automatically.
   * @param {function} [options.promise] - Custom promise module to use instead
   *     of native Promises.
   * @param {string} [options.apiEndpoint] - The domain name of the
   *     API remote host.
   */

  constructor(opts?: ClientOptions) {
    // Ensure that options include the service address and port.
    const staticMembers = this.constructor as typeof DataLabelingServiceClient;
    const servicePath =
      opts && opts.servicePath
        ? opts.servicePath
        : opts && opts.apiEndpoint
        ? opts.apiEndpoint
        : staticMembers.servicePath;
    const port = opts && opts.port ? opts.port : staticMembers.port;

    if (!opts) {
      opts = {servicePath, port};
    }
    opts.servicePath = opts.servicePath || servicePath;
    opts.port = opts.port || port;
    opts.clientConfig = opts.clientConfig || {};

    const isBrowser = typeof window !== 'undefined';
    if (isBrowser) {
      opts.fallback = true;
    }
    // If we are in browser, we are already using fallback because of the
    // "browser" field in package.json.
    // But if we were explicitly requested to use fallback, let's do it now.
    const gaxModule = !isBrowser && opts.fallback ? gax.fallback : gax;

    // Create a `gaxGrpc` object, with any grpc-specific options
    // sent to the client.
    opts.scopes = (this.constructor as typeof DataLabelingServiceClient).scopes;
    const gaxGrpc = new gaxModule.GrpcClient(opts);

    // Save the auth object to the client, for use by other methods.
    this.auth = gaxGrpc.auth as gax.GoogleAuth;

    // Determine the client header string.
    const clientHeader = [`gax/${gaxModule.version}`, `gapic/${version}`];
    if (typeof process !== 'undefined' && 'versions' in process) {
      clientHeader.push(`gl-node/${process.versions.node}`);
    } else {
      clientHeader.push(`gl-web/${gaxModule.version}`);
    }
    if (!opts.fallback) {
      clientHeader.push(`grpc/${gaxGrpc.grpcVersion}`);
    }
    if (opts.libName && opts.libVersion) {
      clientHeader.push(`${opts.libName}/${opts.libVersion}`);
    }
    // Load the applicable protos.
    // For Node.js, pass the path to JSON proto file.
    // For browsers, pass the JSON content.

    const nodejsProtoPath = path.join(
      __dirname,
      '..',
      '..',
      'protos',
      'protos.json'
    );
    const protos = gaxGrpc.loadProto(
      opts.fallback ? require('../../protos/protos.json') : nodejsProtoPath
    );

    // This API contains "path templates"; forward-slash-separated
    // identifiers to uniquely identify resources within the API.
    // Create useful helper objects for these.
    this._pathTemplates = {
      projectPathTemplate: new gaxModule.PathTemplate('projects/{project}'),
      datasetPathTemplate: new gaxModule.PathTemplate(
        'projects/{project}/datasets/{dataset}'
      ),
      annotatedDatasetPathTemplate: new gaxModule.PathTemplate(
        'projects/{project}/datasets/{dataset}/annotatedDatasets/{annotated_dataset}'
      ),
      dataItemPathTemplate: new gaxModule.PathTemplate(
        'projects/{project}/datasets/{dataset}/dataItems/{data_item}'
      ),
      examplePathTemplate: new gaxModule.PathTemplate(
        'projects/{project}/datasets/{dataset}/annotatedDatasets/{annotated_dataset}/examples/{example}'
      ),
      annotationSpecSetPathTemplate: new gaxModule.PathTemplate(
        'projects/{project}/annotationSpecSets/{annotation_spec_set}'
      ),
      instructionPathTemplate: new gaxModule.PathTemplate(
        'projects/{project}/instructions/{instruction}'
      ),
      evaluationPathTemplate: new gaxModule.PathTemplate(
        'projects/{project}/datasets/{dataset}/evaluations/{evaluation}'
      ),
      evaluationJobPathTemplate: new gaxModule.PathTemplate(
        'projects/{project}/evaluationJobs/{evaluation_job}'
      ),
    };

    // Some of the methods on this service return "paged" results,
    // (e.g. 50 results at a time, with tokens to get subsequent
    // pages). Denote the keys used for pagination and results.
    this._descriptors.page = {
      listDatasets: new gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'datasets'
      ),
      listDataItems: new gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'dataItems'
      ),
      listAnnotatedDatasets: new gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'annotatedDatasets'
      ),
      listExamples: new gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'examples'
      ),
      listAnnotationSpecSets: new gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'annotationSpecSets'
      ),
      listInstructions: new gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'instructions'
      ),
      searchEvaluations: new gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'evaluations'
      ),
      searchExampleComparisons: new gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'exampleComparisons'
      ),
      listEvaluationJobs: new gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'evaluationJobs'
      ),
    };

    // This API contains "long-running operations", which return a
    // an Operation object that allows for tracking of the operation,
    // rather than holding a request open.
    const protoFilesRoot = opts.fallback
      ? gaxModule.protobuf.Root.fromJSON(require('../../protos/protos.json'))
      : gaxModule.protobuf.loadSync(nodejsProtoPath);

    this.operationsClient = gaxModule
      .lro({
        auth: this.auth,
        grpc: 'grpc' in gaxGrpc ? gaxGrpc.grpc : undefined,
      })
      .operationsClient(opts);
    const importDataResponse = protoFilesRoot.lookup(
      '.google.cloud.datalabeling.v1beta1.ImportDataOperationResponse'
    ) as gax.protobuf.Type;
    const importDataMetadata = protoFilesRoot.lookup(
      '.google.cloud.datalabeling.v1beta1.ImportDataOperationMetadata'
    ) as gax.protobuf.Type;
    const exportDataResponse = protoFilesRoot.lookup(
      '.google.cloud.datalabeling.v1beta1.ExportDataOperationResponse'
    ) as gax.protobuf.Type;
    const exportDataMetadata = protoFilesRoot.lookup(
      '.google.cloud.datalabeling.v1beta1.ExportDataOperationMetadata'
    ) as gax.protobuf.Type;
    const labelImageResponse = protoFilesRoot.lookup(
      '.google.cloud.datalabeling.v1beta1.AnnotatedDataset'
    ) as gax.protobuf.Type;
    const labelImageMetadata = protoFilesRoot.lookup(
      '.google.cloud.datalabeling.v1beta1.LabelOperationMetadata'
    ) as gax.protobuf.Type;
    const labelVideoResponse = protoFilesRoot.lookup(
      '.google.cloud.datalabeling.v1beta1.AnnotatedDataset'
    ) as gax.protobuf.Type;
    const labelVideoMetadata = protoFilesRoot.lookup(
      '.google.cloud.datalabeling.v1beta1.LabelOperationMetadata'
    ) as gax.protobuf.Type;
    const labelTextResponse = protoFilesRoot.lookup(
      '.google.cloud.datalabeling.v1beta1.AnnotatedDataset'
    ) as gax.protobuf.Type;
    const labelTextMetadata = protoFilesRoot.lookup(
      '.google.cloud.datalabeling.v1beta1.LabelOperationMetadata'
    ) as gax.protobuf.Type;
    const createInstructionResponse = protoFilesRoot.lookup(
      '.google.cloud.datalabeling.v1beta1.Instruction'
    ) as gax.protobuf.Type;
    const createInstructionMetadata = protoFilesRoot.lookup(
      '.google.cloud.datalabeling.v1beta1.CreateInstructionMetadata'
    ) as gax.protobuf.Type;

    this._descriptors.longrunning = {
      importData: new gaxModule.LongrunningDescriptor(
        this.operationsClient,
        importDataResponse.decode.bind(importDataResponse),
        importDataMetadata.decode.bind(importDataMetadata)
      ),
      exportData: new gaxModule.LongrunningDescriptor(
        this.operationsClient,
        exportDataResponse.decode.bind(exportDataResponse),
        exportDataMetadata.decode.bind(exportDataMetadata)
      ),
      labelImage: new gaxModule.LongrunningDescriptor(
        this.operationsClient,
        labelImageResponse.decode.bind(labelImageResponse),
        labelImageMetadata.decode.bind(labelImageMetadata)
      ),
      labelVideo: new gaxModule.LongrunningDescriptor(
        this.operationsClient,
        labelVideoResponse.decode.bind(labelVideoResponse),
        labelVideoMetadata.decode.bind(labelVideoMetadata)
      ),
      labelText: new gaxModule.LongrunningDescriptor(
        this.operationsClient,
        labelTextResponse.decode.bind(labelTextResponse),
        labelTextMetadata.decode.bind(labelTextMetadata)
      ),
      createInstruction: new gaxModule.LongrunningDescriptor(
        this.operationsClient,
        createInstructionResponse.decode.bind(createInstructionResponse),
        createInstructionMetadata.decode.bind(createInstructionMetadata)
      ),
    };

    // Put together the default options sent with requests.
    const defaults = gaxGrpc.constructSettings(
      'google.cloud.datalabeling.v1beta1.DataLabelingService',
      gapicConfig as gax.ClientConfig,
      opts.clientConfig || {},
      {'x-goog-api-client': clientHeader.join(' ')}
    );

    // Set up a dictionary of "inner API calls"; the core implementation
    // of calling the API is handled in `google-gax`, with this code
    // merely providing the destination and request information.
    this._innerApiCalls = {};

    // Put together the "service stub" for
    // google.cloud.datalabeling.v1beta1.DataLabelingService.
    this.dataLabelingServiceStub = gaxGrpc.createStub(
      opts.fallback
        ? (protos as protobuf.Root).lookupService(
            'google.cloud.datalabeling.v1beta1.DataLabelingService'
          )
        : // tslint:disable-next-line no-any
          (protos as any).google.cloud.datalabeling.v1beta1.DataLabelingService,
      opts
    ) as Promise<{[method: string]: Function}>;

    // Iterate over each of the methods that the service provides
    // and create an API call method for each.
    const dataLabelingServiceStubMethods = [
      'createDataset',
      'getDataset',
      'listDatasets',
      'deleteDataset',
      'importData',
      'exportData',
      'getDataItem',
      'listDataItems',
      'getAnnotatedDataset',
      'listAnnotatedDatasets',
      'deleteAnnotatedDataset',
      'labelImage',
      'labelVideo',
      'labelText',
      'getExample',
      'listExamples',
      'createAnnotationSpecSet',
      'getAnnotationSpecSet',
      'listAnnotationSpecSets',
      'deleteAnnotationSpecSet',
      'createInstruction',
      'getInstruction',
      'listInstructions',
      'deleteInstruction',
      'getEvaluation',
      'searchEvaluations',
      'searchExampleComparisons',
      'createEvaluationJob',
      'updateEvaluationJob',
      'getEvaluationJob',
      'pauseEvaluationJob',
      'resumeEvaluationJob',
      'deleteEvaluationJob',
      'listEvaluationJobs',
    ];

    for (const methodName of dataLabelingServiceStubMethods) {
      const innerCallPromise = this.dataLabelingServiceStub.then(
        stub => (...args: Array<{}>) => {
          if (this._terminated) {
            return Promise.reject('The client has already been closed.');
          }
          return stub[methodName].apply(stub, args);
        },
        (err: Error | null | undefined) => () => {
          throw err;
        }
      );

      const apiCall = gaxModule.createApiCall(
        innerCallPromise,
        defaults[methodName],
        this._descriptors.page[methodName] ||
          this._descriptors.stream[methodName] ||
          this._descriptors.longrunning[methodName]
      );

      this._innerApiCalls[methodName] = (
        argument: {},
        callOptions?: CallOptions,
        callback?: APICallback
      ) => {
        return apiCall(argument, callOptions, callback);
      };
    }
  }

  /**
   * The DNS address for this API service.
   */
  static get servicePath() {
    return 'datalabeling.googleapis.com';
  }

  /**
   * The DNS address for this API service - same as servicePath(),
   * exists for compatibility reasons.
   */
  static get apiEndpoint() {
    return 'datalabeling.googleapis.com';
  }

  /**
   * The port for this API service.
   */
  static get port() {
    return 443;
  }

  /**
   * The scopes needed to make gRPC calls for every method defined
   * in this service.
   */
  static get scopes() {
    return ['https://www.googleapis.com/auth/cloud-platform'];
  }

  getProjectId(): Promise<string>;
  getProjectId(callback: Callback<string, undefined, undefined>): void;
  /**
   * Return the project ID used by this class.
   * @param {function(Error, string)} callback - the callback to
   *   be called with the current project Id.
   */
  getProjectId(
    callback?: Callback<string, undefined, undefined>
  ): Promise<string> | void {
    if (callback) {
      this.auth.getProjectId(callback);
      return;
    }
    return this.auth.getProjectId();
  }

  // -------------------
  // -- Service calls --
  // -------------------
  createDataset(
    request: protosTypes.google.cloud.datalabeling.v1beta1.ICreateDatasetRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protosTypes.google.cloud.datalabeling.v1beta1.IDataset,
      (
        | protosTypes.google.cloud.datalabeling.v1beta1.ICreateDatasetRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  createDataset(
    request: protosTypes.google.cloud.datalabeling.v1beta1.ICreateDatasetRequest,
    options: gax.CallOptions,
    callback: Callback<
      protosTypes.google.cloud.datalabeling.v1beta1.IDataset,
      | protosTypes.google.cloud.datalabeling.v1beta1.ICreateDatasetRequest
      | undefined,
      {} | undefined
    >
  ): void;
  /**
   * Creates dataset. If success return a Dataset resource.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Dataset resource parent, format:
   *   projects/{project_id}
   * @param {google.cloud.datalabeling.v1beta1.Dataset} request.dataset
   *   Required. The dataset to be created.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Dataset]{@link google.cloud.datalabeling.v1beta1.Dataset}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  createDataset(
    request: protosTypes.google.cloud.datalabeling.v1beta1.ICreateDatasetRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protosTypes.google.cloud.datalabeling.v1beta1.IDataset,
          | protosTypes.google.cloud.datalabeling.v1beta1.ICreateDatasetRequest
          | undefined,
          {} | undefined
        >,
    callback?: Callback<
      protosTypes.google.cloud.datalabeling.v1beta1.IDataset,
      | protosTypes.google.cloud.datalabeling.v1beta1.ICreateDatasetRequest
      | undefined,
      {} | undefined
    >
  ): Promise<
    [
      protosTypes.google.cloud.datalabeling.v1beta1.IDataset,
      (
        | protosTypes.google.cloud.datalabeling.v1beta1.ICreateDatasetRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    return this._innerApiCalls.createDataset(request, options, callback);
  }
  getDataset(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IGetDatasetRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protosTypes.google.cloud.datalabeling.v1beta1.IDataset,
      (
        | protosTypes.google.cloud.datalabeling.v1beta1.IGetDatasetRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  getDataset(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IGetDatasetRequest,
    options: gax.CallOptions,
    callback: Callback<
      protosTypes.google.cloud.datalabeling.v1beta1.IDataset,
      | protosTypes.google.cloud.datalabeling.v1beta1.IGetDatasetRequest
      | undefined,
      {} | undefined
    >
  ): void;
  /**
   * Gets dataset by resource name.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Dataset resource name, format:
   *   projects/{project_id}/datasets/{dataset_id}
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Dataset]{@link google.cloud.datalabeling.v1beta1.Dataset}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  getDataset(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IGetDatasetRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protosTypes.google.cloud.datalabeling.v1beta1.IDataset,
          | protosTypes.google.cloud.datalabeling.v1beta1.IGetDatasetRequest
          | undefined,
          {} | undefined
        >,
    callback?: Callback<
      protosTypes.google.cloud.datalabeling.v1beta1.IDataset,
      | protosTypes.google.cloud.datalabeling.v1beta1.IGetDatasetRequest
      | undefined,
      {} | undefined
    >
  ): Promise<
    [
      protosTypes.google.cloud.datalabeling.v1beta1.IDataset,
      (
        | protosTypes.google.cloud.datalabeling.v1beta1.IGetDatasetRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    return this._innerApiCalls.getDataset(request, options, callback);
  }
  deleteDataset(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IDeleteDatasetRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protosTypes.google.protobuf.IEmpty,
      (
        | protosTypes.google.cloud.datalabeling.v1beta1.IDeleteDatasetRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  deleteDataset(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IDeleteDatasetRequest,
    options: gax.CallOptions,
    callback: Callback<
      protosTypes.google.protobuf.IEmpty,
      | protosTypes.google.cloud.datalabeling.v1beta1.IDeleteDatasetRequest
      | undefined,
      {} | undefined
    >
  ): void;
  /**
   * Deletes a dataset by resource name.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Dataset resource name, format:
   *   projects/{project_id}/datasets/{dataset_id}
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Empty]{@link google.protobuf.Empty}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  deleteDataset(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IDeleteDatasetRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protosTypes.google.protobuf.IEmpty,
          | protosTypes.google.cloud.datalabeling.v1beta1.IDeleteDatasetRequest
          | undefined,
          {} | undefined
        >,
    callback?: Callback<
      protosTypes.google.protobuf.IEmpty,
      | protosTypes.google.cloud.datalabeling.v1beta1.IDeleteDatasetRequest
      | undefined,
      {} | undefined
    >
  ): Promise<
    [
      protosTypes.google.protobuf.IEmpty,
      (
        | protosTypes.google.cloud.datalabeling.v1beta1.IDeleteDatasetRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    return this._innerApiCalls.deleteDataset(request, options, callback);
  }
  getDataItem(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IGetDataItemRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protosTypes.google.cloud.datalabeling.v1beta1.IDataItem,
      (
        | protosTypes.google.cloud.datalabeling.v1beta1.IGetDataItemRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  getDataItem(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IGetDataItemRequest,
    options: gax.CallOptions,
    callback: Callback<
      protosTypes.google.cloud.datalabeling.v1beta1.IDataItem,
      | protosTypes.google.cloud.datalabeling.v1beta1.IGetDataItemRequest
      | undefined,
      {} | undefined
    >
  ): void;
  /**
   * Gets a data item in a dataset by resource name. This API can be
   * called after data are imported into dataset.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the data item to get, format:
   *   projects/{project_id}/datasets/{dataset_id}/dataItems/{data_item_id}
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [DataItem]{@link google.cloud.datalabeling.v1beta1.DataItem}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  getDataItem(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IGetDataItemRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protosTypes.google.cloud.datalabeling.v1beta1.IDataItem,
          | protosTypes.google.cloud.datalabeling.v1beta1.IGetDataItemRequest
          | undefined,
          {} | undefined
        >,
    callback?: Callback<
      protosTypes.google.cloud.datalabeling.v1beta1.IDataItem,
      | protosTypes.google.cloud.datalabeling.v1beta1.IGetDataItemRequest
      | undefined,
      {} | undefined
    >
  ): Promise<
    [
      protosTypes.google.cloud.datalabeling.v1beta1.IDataItem,
      (
        | protosTypes.google.cloud.datalabeling.v1beta1.IGetDataItemRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    return this._innerApiCalls.getDataItem(request, options, callback);
  }
  getAnnotatedDataset(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IGetAnnotatedDatasetRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protosTypes.google.cloud.datalabeling.v1beta1.IAnnotatedDataset,
      (
        | protosTypes.google.cloud.datalabeling.v1beta1.IGetAnnotatedDatasetRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  getAnnotatedDataset(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IGetAnnotatedDatasetRequest,
    options: gax.CallOptions,
    callback: Callback<
      protosTypes.google.cloud.datalabeling.v1beta1.IAnnotatedDataset,
      | protosTypes.google.cloud.datalabeling.v1beta1.IGetAnnotatedDatasetRequest
      | undefined,
      {} | undefined
    >
  ): void;
  /**
   * Gets an annotated dataset by resource name.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Name of the annotated dataset to get, format:
   *   projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/
   *   {annotated_dataset_id}
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [AnnotatedDataset]{@link google.cloud.datalabeling.v1beta1.AnnotatedDataset}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  getAnnotatedDataset(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IGetAnnotatedDatasetRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protosTypes.google.cloud.datalabeling.v1beta1.IAnnotatedDataset,
          | protosTypes.google.cloud.datalabeling.v1beta1.IGetAnnotatedDatasetRequest
          | undefined,
          {} | undefined
        >,
    callback?: Callback<
      protosTypes.google.cloud.datalabeling.v1beta1.IAnnotatedDataset,
      | protosTypes.google.cloud.datalabeling.v1beta1.IGetAnnotatedDatasetRequest
      | undefined,
      {} | undefined
    >
  ): Promise<
    [
      protosTypes.google.cloud.datalabeling.v1beta1.IAnnotatedDataset,
      (
        | protosTypes.google.cloud.datalabeling.v1beta1.IGetAnnotatedDatasetRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    return this._innerApiCalls.getAnnotatedDataset(request, options, callback);
  }
  deleteAnnotatedDataset(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IDeleteAnnotatedDatasetRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protosTypes.google.protobuf.IEmpty,
      (
        | protosTypes.google.cloud.datalabeling.v1beta1.IDeleteAnnotatedDatasetRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  deleteAnnotatedDataset(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IDeleteAnnotatedDatasetRequest,
    options: gax.CallOptions,
    callback: Callback<
      protosTypes.google.protobuf.IEmpty,
      | protosTypes.google.cloud.datalabeling.v1beta1.IDeleteAnnotatedDatasetRequest
      | undefined,
      {} | undefined
    >
  ): void;
  /**
   * Deletes an annotated dataset by resource name.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Name of the annotated dataset to delete, format:
   *   projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/
   *   {annotated_dataset_id}
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Empty]{@link google.protobuf.Empty}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  deleteAnnotatedDataset(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IDeleteAnnotatedDatasetRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protosTypes.google.protobuf.IEmpty,
          | protosTypes.google.cloud.datalabeling.v1beta1.IDeleteAnnotatedDatasetRequest
          | undefined,
          {} | undefined
        >,
    callback?: Callback<
      protosTypes.google.protobuf.IEmpty,
      | protosTypes.google.cloud.datalabeling.v1beta1.IDeleteAnnotatedDatasetRequest
      | undefined,
      {} | undefined
    >
  ): Promise<
    [
      protosTypes.google.protobuf.IEmpty,
      (
        | protosTypes.google.cloud.datalabeling.v1beta1.IDeleteAnnotatedDatasetRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    return this._innerApiCalls.deleteAnnotatedDataset(
      request,
      options,
      callback
    );
  }
  getExample(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IGetExampleRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protosTypes.google.cloud.datalabeling.v1beta1.IExample,
      (
        | protosTypes.google.cloud.datalabeling.v1beta1.IGetExampleRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  getExample(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IGetExampleRequest,
    options: gax.CallOptions,
    callback: Callback<
      protosTypes.google.cloud.datalabeling.v1beta1.IExample,
      | protosTypes.google.cloud.datalabeling.v1beta1.IGetExampleRequest
      | undefined,
      {} | undefined
    >
  ): void;
  /**
   * Gets an example by resource name, including both data and annotation.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Name of example, format:
   *   projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/
   *   {annotated_dataset_id}/examples/{example_id}
   * @param {string} [request.filter]
   *   Optional. An expression for filtering Examples. Filter by
   *   annotation_spec.display_name is supported. Format
   *   "annotation_spec.display_name = {display_name}"
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Example]{@link google.cloud.datalabeling.v1beta1.Example}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  getExample(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IGetExampleRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protosTypes.google.cloud.datalabeling.v1beta1.IExample,
          | protosTypes.google.cloud.datalabeling.v1beta1.IGetExampleRequest
          | undefined,
          {} | undefined
        >,
    callback?: Callback<
      protosTypes.google.cloud.datalabeling.v1beta1.IExample,
      | protosTypes.google.cloud.datalabeling.v1beta1.IGetExampleRequest
      | undefined,
      {} | undefined
    >
  ): Promise<
    [
      protosTypes.google.cloud.datalabeling.v1beta1.IExample,
      (
        | protosTypes.google.cloud.datalabeling.v1beta1.IGetExampleRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    return this._innerApiCalls.getExample(request, options, callback);
  }
  createAnnotationSpecSet(
    request: protosTypes.google.cloud.datalabeling.v1beta1.ICreateAnnotationSpecSetRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protosTypes.google.cloud.datalabeling.v1beta1.IAnnotationSpecSet,
      (
        | protosTypes.google.cloud.datalabeling.v1beta1.ICreateAnnotationSpecSetRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  createAnnotationSpecSet(
    request: protosTypes.google.cloud.datalabeling.v1beta1.ICreateAnnotationSpecSetRequest,
    options: gax.CallOptions,
    callback: Callback<
      protosTypes.google.cloud.datalabeling.v1beta1.IAnnotationSpecSet,
      | protosTypes.google.cloud.datalabeling.v1beta1.ICreateAnnotationSpecSetRequest
      | undefined,
      {} | undefined
    >
  ): void;
  /**
   * Creates an annotation spec set by providing a set of labels.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. AnnotationSpecSet resource parent, format:
   *   projects/{project_id}
   * @param {google.cloud.datalabeling.v1beta1.AnnotationSpecSet} request.annotationSpecSet
   *   Required. Annotation spec set to create. Annotation specs must be included.
   *   Only one annotation spec will be accepted for annotation specs with same
   *   display_name.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [AnnotationSpecSet]{@link google.cloud.datalabeling.v1beta1.AnnotationSpecSet}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  createAnnotationSpecSet(
    request: protosTypes.google.cloud.datalabeling.v1beta1.ICreateAnnotationSpecSetRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protosTypes.google.cloud.datalabeling.v1beta1.IAnnotationSpecSet,
          | protosTypes.google.cloud.datalabeling.v1beta1.ICreateAnnotationSpecSetRequest
          | undefined,
          {} | undefined
        >,
    callback?: Callback<
      protosTypes.google.cloud.datalabeling.v1beta1.IAnnotationSpecSet,
      | protosTypes.google.cloud.datalabeling.v1beta1.ICreateAnnotationSpecSetRequest
      | undefined,
      {} | undefined
    >
  ): Promise<
    [
      protosTypes.google.cloud.datalabeling.v1beta1.IAnnotationSpecSet,
      (
        | protosTypes.google.cloud.datalabeling.v1beta1.ICreateAnnotationSpecSetRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    return this._innerApiCalls.createAnnotationSpecSet(
      request,
      options,
      callback
    );
  }
  getAnnotationSpecSet(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IGetAnnotationSpecSetRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protosTypes.google.cloud.datalabeling.v1beta1.IAnnotationSpecSet,
      (
        | protosTypes.google.cloud.datalabeling.v1beta1.IGetAnnotationSpecSetRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  getAnnotationSpecSet(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IGetAnnotationSpecSetRequest,
    options: gax.CallOptions,
    callback: Callback<
      protosTypes.google.cloud.datalabeling.v1beta1.IAnnotationSpecSet,
      | protosTypes.google.cloud.datalabeling.v1beta1.IGetAnnotationSpecSetRequest
      | undefined,
      {} | undefined
    >
  ): void;
  /**
   * Gets an annotation spec set by resource name.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. AnnotationSpecSet resource name, format:
   *   projects/{project_id}/annotationSpecSets/{annotation_spec_set_id}
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [AnnotationSpecSet]{@link google.cloud.datalabeling.v1beta1.AnnotationSpecSet}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  getAnnotationSpecSet(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IGetAnnotationSpecSetRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protosTypes.google.cloud.datalabeling.v1beta1.IAnnotationSpecSet,
          | protosTypes.google.cloud.datalabeling.v1beta1.IGetAnnotationSpecSetRequest
          | undefined,
          {} | undefined
        >,
    callback?: Callback<
      protosTypes.google.cloud.datalabeling.v1beta1.IAnnotationSpecSet,
      | protosTypes.google.cloud.datalabeling.v1beta1.IGetAnnotationSpecSetRequest
      | undefined,
      {} | undefined
    >
  ): Promise<
    [
      protosTypes.google.cloud.datalabeling.v1beta1.IAnnotationSpecSet,
      (
        | protosTypes.google.cloud.datalabeling.v1beta1.IGetAnnotationSpecSetRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    return this._innerApiCalls.getAnnotationSpecSet(request, options, callback);
  }
  deleteAnnotationSpecSet(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IDeleteAnnotationSpecSetRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protosTypes.google.protobuf.IEmpty,
      (
        | protosTypes.google.cloud.datalabeling.v1beta1.IDeleteAnnotationSpecSetRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  deleteAnnotationSpecSet(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IDeleteAnnotationSpecSetRequest,
    options: gax.CallOptions,
    callback: Callback<
      protosTypes.google.protobuf.IEmpty,
      | protosTypes.google.cloud.datalabeling.v1beta1.IDeleteAnnotationSpecSetRequest
      | undefined,
      {} | undefined
    >
  ): void;
  /**
   * Deletes an annotation spec set by resource name.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. AnnotationSpec resource name, format:
   *   `projects/{project_id}/annotationSpecSets/{annotation_spec_set_id}`.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Empty]{@link google.protobuf.Empty}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  deleteAnnotationSpecSet(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IDeleteAnnotationSpecSetRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protosTypes.google.protobuf.IEmpty,
          | protosTypes.google.cloud.datalabeling.v1beta1.IDeleteAnnotationSpecSetRequest
          | undefined,
          {} | undefined
        >,
    callback?: Callback<
      protosTypes.google.protobuf.IEmpty,
      | protosTypes.google.cloud.datalabeling.v1beta1.IDeleteAnnotationSpecSetRequest
      | undefined,
      {} | undefined
    >
  ): Promise<
    [
      protosTypes.google.protobuf.IEmpty,
      (
        | protosTypes.google.cloud.datalabeling.v1beta1.IDeleteAnnotationSpecSetRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    return this._innerApiCalls.deleteAnnotationSpecSet(
      request,
      options,
      callback
    );
  }
  getInstruction(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IGetInstructionRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protosTypes.google.cloud.datalabeling.v1beta1.IInstruction,
      (
        | protosTypes.google.cloud.datalabeling.v1beta1.IGetInstructionRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  getInstruction(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IGetInstructionRequest,
    options: gax.CallOptions,
    callback: Callback<
      protosTypes.google.cloud.datalabeling.v1beta1.IInstruction,
      | protosTypes.google.cloud.datalabeling.v1beta1.IGetInstructionRequest
      | undefined,
      {} | undefined
    >
  ): void;
  /**
   * Gets an instruction by resource name.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Instruction resource name, format:
   *   projects/{project_id}/instructions/{instruction_id}
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Instruction]{@link google.cloud.datalabeling.v1beta1.Instruction}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  getInstruction(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IGetInstructionRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protosTypes.google.cloud.datalabeling.v1beta1.IInstruction,
          | protosTypes.google.cloud.datalabeling.v1beta1.IGetInstructionRequest
          | undefined,
          {} | undefined
        >,
    callback?: Callback<
      protosTypes.google.cloud.datalabeling.v1beta1.IInstruction,
      | protosTypes.google.cloud.datalabeling.v1beta1.IGetInstructionRequest
      | undefined,
      {} | undefined
    >
  ): Promise<
    [
      protosTypes.google.cloud.datalabeling.v1beta1.IInstruction,
      (
        | protosTypes.google.cloud.datalabeling.v1beta1.IGetInstructionRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    return this._innerApiCalls.getInstruction(request, options, callback);
  }
  deleteInstruction(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IDeleteInstructionRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protosTypes.google.protobuf.IEmpty,
      (
        | protosTypes.google.cloud.datalabeling.v1beta1.IDeleteInstructionRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  deleteInstruction(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IDeleteInstructionRequest,
    options: gax.CallOptions,
    callback: Callback<
      protosTypes.google.protobuf.IEmpty,
      | protosTypes.google.cloud.datalabeling.v1beta1.IDeleteInstructionRequest
      | undefined,
      {} | undefined
    >
  ): void;
  /**
   * Deletes an instruction object by resource name.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Instruction resource name, format:
   *   projects/{project_id}/instructions/{instruction_id}
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Empty]{@link google.protobuf.Empty}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  deleteInstruction(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IDeleteInstructionRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protosTypes.google.protobuf.IEmpty,
          | protosTypes.google.cloud.datalabeling.v1beta1.IDeleteInstructionRequest
          | undefined,
          {} | undefined
        >,
    callback?: Callback<
      protosTypes.google.protobuf.IEmpty,
      | protosTypes.google.cloud.datalabeling.v1beta1.IDeleteInstructionRequest
      | undefined,
      {} | undefined
    >
  ): Promise<
    [
      protosTypes.google.protobuf.IEmpty,
      (
        | protosTypes.google.cloud.datalabeling.v1beta1.IDeleteInstructionRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    return this._innerApiCalls.deleteInstruction(request, options, callback);
  }
  getEvaluation(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IGetEvaluationRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protosTypes.google.cloud.datalabeling.v1beta1.IEvaluation,
      (
        | protosTypes.google.cloud.datalabeling.v1beta1.IGetEvaluationRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  getEvaluation(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IGetEvaluationRequest,
    options: gax.CallOptions,
    callback: Callback<
      protosTypes.google.cloud.datalabeling.v1beta1.IEvaluation,
      | protosTypes.google.cloud.datalabeling.v1beta1.IGetEvaluationRequest
      | undefined,
      {} | undefined
    >
  ): void;
  /**
   * Gets an evaluation by resource name (to search, use
   * [projects.evaluations.search][google.cloud.datalabeling.v1beta1.DataLabelingService.SearchEvaluations]).
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Name of the evaluation. Format:
   *
   *   "projects/<var>{project_id}</var>/datasets/<var>{dataset_id}</var>/evaluations/<var>{evaluation_id}</var>'
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Evaluation]{@link google.cloud.datalabeling.v1beta1.Evaluation}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  getEvaluation(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IGetEvaluationRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protosTypes.google.cloud.datalabeling.v1beta1.IEvaluation,
          | protosTypes.google.cloud.datalabeling.v1beta1.IGetEvaluationRequest
          | undefined,
          {} | undefined
        >,
    callback?: Callback<
      protosTypes.google.cloud.datalabeling.v1beta1.IEvaluation,
      | protosTypes.google.cloud.datalabeling.v1beta1.IGetEvaluationRequest
      | undefined,
      {} | undefined
    >
  ): Promise<
    [
      protosTypes.google.cloud.datalabeling.v1beta1.IEvaluation,
      (
        | protosTypes.google.cloud.datalabeling.v1beta1.IGetEvaluationRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    return this._innerApiCalls.getEvaluation(request, options, callback);
  }
  createEvaluationJob(
    request: protosTypes.google.cloud.datalabeling.v1beta1.ICreateEvaluationJobRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protosTypes.google.cloud.datalabeling.v1beta1.IEvaluationJob,
      (
        | protosTypes.google.cloud.datalabeling.v1beta1.ICreateEvaluationJobRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  createEvaluationJob(
    request: protosTypes.google.cloud.datalabeling.v1beta1.ICreateEvaluationJobRequest,
    options: gax.CallOptions,
    callback: Callback<
      protosTypes.google.cloud.datalabeling.v1beta1.IEvaluationJob,
      | protosTypes.google.cloud.datalabeling.v1beta1.ICreateEvaluationJobRequest
      | undefined,
      {} | undefined
    >
  ): void;
  /**
   * Creates an evaluation job.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Evaluation job resource parent. Format:
   *   "projects/<var>{project_id}</var>"
   * @param {google.cloud.datalabeling.v1beta1.EvaluationJob} request.job
   *   Required. The evaluation job to create.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [EvaluationJob]{@link google.cloud.datalabeling.v1beta1.EvaluationJob}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  createEvaluationJob(
    request: protosTypes.google.cloud.datalabeling.v1beta1.ICreateEvaluationJobRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protosTypes.google.cloud.datalabeling.v1beta1.IEvaluationJob,
          | protosTypes.google.cloud.datalabeling.v1beta1.ICreateEvaluationJobRequest
          | undefined,
          {} | undefined
        >,
    callback?: Callback<
      protosTypes.google.cloud.datalabeling.v1beta1.IEvaluationJob,
      | protosTypes.google.cloud.datalabeling.v1beta1.ICreateEvaluationJobRequest
      | undefined,
      {} | undefined
    >
  ): Promise<
    [
      protosTypes.google.cloud.datalabeling.v1beta1.IEvaluationJob,
      (
        | protosTypes.google.cloud.datalabeling.v1beta1.ICreateEvaluationJobRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    return this._innerApiCalls.createEvaluationJob(request, options, callback);
  }
  updateEvaluationJob(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IUpdateEvaluationJobRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protosTypes.google.cloud.datalabeling.v1beta1.IEvaluationJob,
      (
        | protosTypes.google.cloud.datalabeling.v1beta1.IUpdateEvaluationJobRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  updateEvaluationJob(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IUpdateEvaluationJobRequest,
    options: gax.CallOptions,
    callback: Callback<
      protosTypes.google.cloud.datalabeling.v1beta1.IEvaluationJob,
      | protosTypes.google.cloud.datalabeling.v1beta1.IUpdateEvaluationJobRequest
      | undefined,
      {} | undefined
    >
  ): void;
  /**
   * Updates an evaluation job. You can only update certain fields of the job's
   * [EvaluationJobConfig][google.cloud.datalabeling.v1beta1.EvaluationJobConfig]: `humanAnnotationConfig.instruction`,
   * `exampleCount`, and `exampleSamplePercentage`.
   *
   * If you want to change any other aspect of the evaluation job, you must
   * delete the job and create a new one.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.datalabeling.v1beta1.EvaluationJob} request.evaluationJob
   *   Required. Evaluation job that is going to be updated.
   * @param {google.protobuf.FieldMask} [request.updateMask]
   *   Optional. Mask for which fields to update. You can only provide the
   *   following fields:
   *
   *   * `evaluationJobConfig.humanAnnotationConfig.instruction`
   *   * `evaluationJobConfig.exampleCount`
   *   * `evaluationJobConfig.exampleSamplePercentage`
   *
   *   You can provide more than one of these fields by separating them with
   *   commas.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [EvaluationJob]{@link google.cloud.datalabeling.v1beta1.EvaluationJob}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  updateEvaluationJob(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IUpdateEvaluationJobRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protosTypes.google.cloud.datalabeling.v1beta1.IEvaluationJob,
          | protosTypes.google.cloud.datalabeling.v1beta1.IUpdateEvaluationJobRequest
          | undefined,
          {} | undefined
        >,
    callback?: Callback<
      protosTypes.google.cloud.datalabeling.v1beta1.IEvaluationJob,
      | protosTypes.google.cloud.datalabeling.v1beta1.IUpdateEvaluationJobRequest
      | undefined,
      {} | undefined
    >
  ): Promise<
    [
      protosTypes.google.cloud.datalabeling.v1beta1.IEvaluationJob,
      (
        | protosTypes.google.cloud.datalabeling.v1beta1.IUpdateEvaluationJobRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      'evaluation_job.name': request.evaluationJob!.name || '',
    });
    return this._innerApiCalls.updateEvaluationJob(request, options, callback);
  }
  getEvaluationJob(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IGetEvaluationJobRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protosTypes.google.cloud.datalabeling.v1beta1.IEvaluationJob,
      (
        | protosTypes.google.cloud.datalabeling.v1beta1.IGetEvaluationJobRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  getEvaluationJob(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IGetEvaluationJobRequest,
    options: gax.CallOptions,
    callback: Callback<
      protosTypes.google.cloud.datalabeling.v1beta1.IEvaluationJob,
      | protosTypes.google.cloud.datalabeling.v1beta1.IGetEvaluationJobRequest
      | undefined,
      {} | undefined
    >
  ): void;
  /**
   * Gets an evaluation job by resource name.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Name of the evaluation job. Format:
   *
   *   "projects/<var>{project_id}</var>/evaluationJobs/<var>{evaluation_job_id}</var>"
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [EvaluationJob]{@link google.cloud.datalabeling.v1beta1.EvaluationJob}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  getEvaluationJob(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IGetEvaluationJobRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protosTypes.google.cloud.datalabeling.v1beta1.IEvaluationJob,
          | protosTypes.google.cloud.datalabeling.v1beta1.IGetEvaluationJobRequest
          | undefined,
          {} | undefined
        >,
    callback?: Callback<
      protosTypes.google.cloud.datalabeling.v1beta1.IEvaluationJob,
      | protosTypes.google.cloud.datalabeling.v1beta1.IGetEvaluationJobRequest
      | undefined,
      {} | undefined
    >
  ): Promise<
    [
      protosTypes.google.cloud.datalabeling.v1beta1.IEvaluationJob,
      (
        | protosTypes.google.cloud.datalabeling.v1beta1.IGetEvaluationJobRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    return this._innerApiCalls.getEvaluationJob(request, options, callback);
  }
  pauseEvaluationJob(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IPauseEvaluationJobRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protosTypes.google.protobuf.IEmpty,
      (
        | protosTypes.google.cloud.datalabeling.v1beta1.IPauseEvaluationJobRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  pauseEvaluationJob(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IPauseEvaluationJobRequest,
    options: gax.CallOptions,
    callback: Callback<
      protosTypes.google.protobuf.IEmpty,
      | protosTypes.google.cloud.datalabeling.v1beta1.IPauseEvaluationJobRequest
      | undefined,
      {} | undefined
    >
  ): void;
  /**
   * Pauses an evaluation job. Pausing an evaluation job that is already in a
   * `PAUSED` state is a no-op.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Name of the evaluation job that is going to be paused. Format:
   *
   *   "projects/<var>{project_id}</var>/evaluationJobs/<var>{evaluation_job_id}</var>"
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Empty]{@link google.protobuf.Empty}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  pauseEvaluationJob(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IPauseEvaluationJobRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protosTypes.google.protobuf.IEmpty,
          | protosTypes.google.cloud.datalabeling.v1beta1.IPauseEvaluationJobRequest
          | undefined,
          {} | undefined
        >,
    callback?: Callback<
      protosTypes.google.protobuf.IEmpty,
      | protosTypes.google.cloud.datalabeling.v1beta1.IPauseEvaluationJobRequest
      | undefined,
      {} | undefined
    >
  ): Promise<
    [
      protosTypes.google.protobuf.IEmpty,
      (
        | protosTypes.google.cloud.datalabeling.v1beta1.IPauseEvaluationJobRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    return this._innerApiCalls.pauseEvaluationJob(request, options, callback);
  }
  resumeEvaluationJob(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IResumeEvaluationJobRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protosTypes.google.protobuf.IEmpty,
      (
        | protosTypes.google.cloud.datalabeling.v1beta1.IResumeEvaluationJobRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  resumeEvaluationJob(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IResumeEvaluationJobRequest,
    options: gax.CallOptions,
    callback: Callback<
      protosTypes.google.protobuf.IEmpty,
      | protosTypes.google.cloud.datalabeling.v1beta1.IResumeEvaluationJobRequest
      | undefined,
      {} | undefined
    >
  ): void;
  /**
   * Resumes a paused evaluation job. A deleted evaluation job can't be resumed.
   * Resuming a running or scheduled evaluation job is a no-op.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Name of the evaluation job that is going to be resumed. Format:
   *
   *   "projects/<var>{project_id}</var>/evaluationJobs/<var>{evaluation_job_id}</var>"
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Empty]{@link google.protobuf.Empty}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  resumeEvaluationJob(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IResumeEvaluationJobRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protosTypes.google.protobuf.IEmpty,
          | protosTypes.google.cloud.datalabeling.v1beta1.IResumeEvaluationJobRequest
          | undefined,
          {} | undefined
        >,
    callback?: Callback<
      protosTypes.google.protobuf.IEmpty,
      | protosTypes.google.cloud.datalabeling.v1beta1.IResumeEvaluationJobRequest
      | undefined,
      {} | undefined
    >
  ): Promise<
    [
      protosTypes.google.protobuf.IEmpty,
      (
        | protosTypes.google.cloud.datalabeling.v1beta1.IResumeEvaluationJobRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    return this._innerApiCalls.resumeEvaluationJob(request, options, callback);
  }
  deleteEvaluationJob(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IDeleteEvaluationJobRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protosTypes.google.protobuf.IEmpty,
      (
        | protosTypes.google.cloud.datalabeling.v1beta1.IDeleteEvaluationJobRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  deleteEvaluationJob(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IDeleteEvaluationJobRequest,
    options: gax.CallOptions,
    callback: Callback<
      protosTypes.google.protobuf.IEmpty,
      | protosTypes.google.cloud.datalabeling.v1beta1.IDeleteEvaluationJobRequest
      | undefined,
      {} | undefined
    >
  ): void;
  /**
   * Stops and deletes an evaluation job.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Name of the evaluation job that is going to be deleted. Format:
   *
   *   "projects/<var>{project_id}</var>/evaluationJobs/<var>{evaluation_job_id}</var>"
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Empty]{@link google.protobuf.Empty}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  deleteEvaluationJob(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IDeleteEvaluationJobRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protosTypes.google.protobuf.IEmpty,
          | protosTypes.google.cloud.datalabeling.v1beta1.IDeleteEvaluationJobRequest
          | undefined,
          {} | undefined
        >,
    callback?: Callback<
      protosTypes.google.protobuf.IEmpty,
      | protosTypes.google.cloud.datalabeling.v1beta1.IDeleteEvaluationJobRequest
      | undefined,
      {} | undefined
    >
  ): Promise<
    [
      protosTypes.google.protobuf.IEmpty,
      (
        | protosTypes.google.cloud.datalabeling.v1beta1.IDeleteEvaluationJobRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    return this._innerApiCalls.deleteEvaluationJob(request, options, callback);
  }

  importData(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IImportDataRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      LROperation<
        protosTypes.google.cloud.datalabeling.v1beta1.IImportDataOperationResponse,
        protosTypes.google.cloud.datalabeling.v1beta1.IImportDataOperationMetadata
      >,
      protosTypes.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  >;
  importData(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IImportDataRequest,
    options: gax.CallOptions,
    callback: Callback<
      LROperation<
        protosTypes.google.cloud.datalabeling.v1beta1.IImportDataOperationResponse,
        protosTypes.google.cloud.datalabeling.v1beta1.IImportDataOperationMetadata
      >,
      protosTypes.google.longrunning.IOperation | undefined,
      {} | undefined
    >
  ): void;
  /**
   * Imports data into dataset based on source locations defined in request.
   * It can be called multiple times for the same dataset. Each dataset can
   * only have one long running operation running on it. For example, no
   * labeling task (also long running operation) can be started while
   * importing is still ongoing. Vice versa.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Dataset resource name, format:
   *   projects/{project_id}/datasets/{dataset_id}
   * @param {google.cloud.datalabeling.v1beta1.InputConfig} request.inputConfig
   *   Required. Specify the input source of the data.
   * @param {string} request.userEmailAddress
   *   Email of the user who started the import task and should be notified by
   *   email. If empty no notification will be sent.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Operation]{@link google.longrunning.Operation}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  importData(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IImportDataRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          LROperation<
            protosTypes.google.cloud.datalabeling.v1beta1.IImportDataOperationResponse,
            protosTypes.google.cloud.datalabeling.v1beta1.IImportDataOperationMetadata
          >,
          protosTypes.google.longrunning.IOperation | undefined,
          {} | undefined
        >,
    callback?: Callback<
      LROperation<
        protosTypes.google.cloud.datalabeling.v1beta1.IImportDataOperationResponse,
        protosTypes.google.cloud.datalabeling.v1beta1.IImportDataOperationMetadata
      >,
      protosTypes.google.longrunning.IOperation | undefined,
      {} | undefined
    >
  ): Promise<
    [
      LROperation<
        protosTypes.google.cloud.datalabeling.v1beta1.IImportDataOperationResponse,
        protosTypes.google.cloud.datalabeling.v1beta1.IImportDataOperationMetadata
      >,
      protosTypes.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    return this._innerApiCalls.importData(request, options, callback);
  }
  exportData(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IExportDataRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      LROperation<
        protosTypes.google.cloud.datalabeling.v1beta1.IExportDataOperationResponse,
        protosTypes.google.cloud.datalabeling.v1beta1.IExportDataOperationMetadata
      >,
      protosTypes.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  >;
  exportData(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IExportDataRequest,
    options: gax.CallOptions,
    callback: Callback<
      LROperation<
        protosTypes.google.cloud.datalabeling.v1beta1.IExportDataOperationResponse,
        protosTypes.google.cloud.datalabeling.v1beta1.IExportDataOperationMetadata
      >,
      protosTypes.google.longrunning.IOperation | undefined,
      {} | undefined
    >
  ): void;
  /**
   * Exports data and annotations from dataset.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Dataset resource name, format:
   *   projects/{project_id}/datasets/{dataset_id}
   * @param {string} request.annotatedDataset
   *   Required. Annotated dataset resource name. DataItem in
   *   Dataset and their annotations in specified annotated dataset will be
   *   exported. It's in format of
   *   projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/
   *   {annotated_dataset_id}
   * @param {string} [request.filter]
   *   Optional. Filter is not supported at this moment.
   * @param {google.cloud.datalabeling.v1beta1.OutputConfig} request.outputConfig
   *   Required. Specify the output destination.
   * @param {string} request.userEmailAddress
   *   Email of the user who started the export task and should be notified by
   *   email. If empty no notification will be sent.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Operation]{@link google.longrunning.Operation}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  exportData(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IExportDataRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          LROperation<
            protosTypes.google.cloud.datalabeling.v1beta1.IExportDataOperationResponse,
            protosTypes.google.cloud.datalabeling.v1beta1.IExportDataOperationMetadata
          >,
          protosTypes.google.longrunning.IOperation | undefined,
          {} | undefined
        >,
    callback?: Callback<
      LROperation<
        protosTypes.google.cloud.datalabeling.v1beta1.IExportDataOperationResponse,
        protosTypes.google.cloud.datalabeling.v1beta1.IExportDataOperationMetadata
      >,
      protosTypes.google.longrunning.IOperation | undefined,
      {} | undefined
    >
  ): Promise<
    [
      LROperation<
        protosTypes.google.cloud.datalabeling.v1beta1.IExportDataOperationResponse,
        protosTypes.google.cloud.datalabeling.v1beta1.IExportDataOperationMetadata
      >,
      protosTypes.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      name: request.name || '',
    });
    return this._innerApiCalls.exportData(request, options, callback);
  }
  labelImage(
    request: protosTypes.google.cloud.datalabeling.v1beta1.ILabelImageRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      LROperation<
        protosTypes.google.cloud.datalabeling.v1beta1.IAnnotatedDataset,
        protosTypes.google.cloud.datalabeling.v1beta1.ILabelOperationMetadata
      >,
      protosTypes.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  >;
  labelImage(
    request: protosTypes.google.cloud.datalabeling.v1beta1.ILabelImageRequest,
    options: gax.CallOptions,
    callback: Callback<
      LROperation<
        protosTypes.google.cloud.datalabeling.v1beta1.IAnnotatedDataset,
        protosTypes.google.cloud.datalabeling.v1beta1.ILabelOperationMetadata
      >,
      protosTypes.google.longrunning.IOperation | undefined,
      {} | undefined
    >
  ): void;
  /**
   * Starts a labeling task for image. The type of image labeling task is
   * configured by feature in the request.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.datalabeling.v1beta1.ImageClassificationConfig} request.imageClassificationConfig
   *   Configuration for image classification task.
   *   One of image_classification_config, bounding_poly_config,
   *   polyline_config and segmentation_config are required.
   * @param {google.cloud.datalabeling.v1beta1.BoundingPolyConfig} request.boundingPolyConfig
   *   Configuration for bounding box and bounding poly task.
   *   One of image_classification_config, bounding_poly_config,
   *   polyline_config and segmentation_config are required.
   * @param {google.cloud.datalabeling.v1beta1.PolylineConfig} request.polylineConfig
   *   Configuration for polyline task.
   *   One of image_classification_config, bounding_poly_config,
   *   polyline_config and segmentation_config are required.
   * @param {google.cloud.datalabeling.v1beta1.SegmentationConfig} request.segmentationConfig
   *   Configuration for segmentation task.
   *   One of image_classification_config, bounding_poly_config,
   *   polyline_config and segmentation_config are required.
   * @param {string} request.parent
   *   Required. Name of the dataset to request labeling task, format:
   *   projects/{project_id}/datasets/{dataset_id}
   * @param {google.cloud.datalabeling.v1beta1.HumanAnnotationConfig} request.basicConfig
   *   Required. Basic human annotation config.
   * @param {google.cloud.datalabeling.v1beta1.LabelImageRequest.Feature} request.feature
   *   Required. The type of image labeling task.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Operation]{@link google.longrunning.Operation}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  labelImage(
    request: protosTypes.google.cloud.datalabeling.v1beta1.ILabelImageRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          LROperation<
            protosTypes.google.cloud.datalabeling.v1beta1.IAnnotatedDataset,
            protosTypes.google.cloud.datalabeling.v1beta1.ILabelOperationMetadata
          >,
          protosTypes.google.longrunning.IOperation | undefined,
          {} | undefined
        >,
    callback?: Callback<
      LROperation<
        protosTypes.google.cloud.datalabeling.v1beta1.IAnnotatedDataset,
        protosTypes.google.cloud.datalabeling.v1beta1.ILabelOperationMetadata
      >,
      protosTypes.google.longrunning.IOperation | undefined,
      {} | undefined
    >
  ): Promise<
    [
      LROperation<
        protosTypes.google.cloud.datalabeling.v1beta1.IAnnotatedDataset,
        protosTypes.google.cloud.datalabeling.v1beta1.ILabelOperationMetadata
      >,
      protosTypes.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    return this._innerApiCalls.labelImage(request, options, callback);
  }
  labelVideo(
    request: protosTypes.google.cloud.datalabeling.v1beta1.ILabelVideoRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      LROperation<
        protosTypes.google.cloud.datalabeling.v1beta1.IAnnotatedDataset,
        protosTypes.google.cloud.datalabeling.v1beta1.ILabelOperationMetadata
      >,
      protosTypes.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  >;
  labelVideo(
    request: protosTypes.google.cloud.datalabeling.v1beta1.ILabelVideoRequest,
    options: gax.CallOptions,
    callback: Callback<
      LROperation<
        protosTypes.google.cloud.datalabeling.v1beta1.IAnnotatedDataset,
        protosTypes.google.cloud.datalabeling.v1beta1.ILabelOperationMetadata
      >,
      protosTypes.google.longrunning.IOperation | undefined,
      {} | undefined
    >
  ): void;
  /**
   * Starts a labeling task for video. The type of video labeling task is
   * configured by feature in the request.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.datalabeling.v1beta1.VideoClassificationConfig} request.videoClassificationConfig
   *   Configuration for video classification task.
   *   One of video_classification_config, object_detection_config,
   *   object_tracking_config and event_config is required.
   * @param {google.cloud.datalabeling.v1beta1.ObjectDetectionConfig} request.objectDetectionConfig
   *   Configuration for video object detection task.
   *   One of video_classification_config, object_detection_config,
   *   object_tracking_config and event_config is required.
   * @param {google.cloud.datalabeling.v1beta1.ObjectTrackingConfig} request.objectTrackingConfig
   *   Configuration for video object tracking task.
   *   One of video_classification_config, object_detection_config,
   *   object_tracking_config and event_config is required.
   * @param {google.cloud.datalabeling.v1beta1.EventConfig} request.eventConfig
   *   Configuration for video event task.
   *   One of video_classification_config, object_detection_config,
   *   object_tracking_config and event_config is required.
   * @param {string} request.parent
   *   Required. Name of the dataset to request labeling task, format:
   *   projects/{project_id}/datasets/{dataset_id}
   * @param {google.cloud.datalabeling.v1beta1.HumanAnnotationConfig} request.basicConfig
   *   Required. Basic human annotation config.
   * @param {google.cloud.datalabeling.v1beta1.LabelVideoRequest.Feature} request.feature
   *   Required. The type of video labeling task.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Operation]{@link google.longrunning.Operation}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  labelVideo(
    request: protosTypes.google.cloud.datalabeling.v1beta1.ILabelVideoRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          LROperation<
            protosTypes.google.cloud.datalabeling.v1beta1.IAnnotatedDataset,
            protosTypes.google.cloud.datalabeling.v1beta1.ILabelOperationMetadata
          >,
          protosTypes.google.longrunning.IOperation | undefined,
          {} | undefined
        >,
    callback?: Callback<
      LROperation<
        protosTypes.google.cloud.datalabeling.v1beta1.IAnnotatedDataset,
        protosTypes.google.cloud.datalabeling.v1beta1.ILabelOperationMetadata
      >,
      protosTypes.google.longrunning.IOperation | undefined,
      {} | undefined
    >
  ): Promise<
    [
      LROperation<
        protosTypes.google.cloud.datalabeling.v1beta1.IAnnotatedDataset,
        protosTypes.google.cloud.datalabeling.v1beta1.ILabelOperationMetadata
      >,
      protosTypes.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    return this._innerApiCalls.labelVideo(request, options, callback);
  }
  labelText(
    request: protosTypes.google.cloud.datalabeling.v1beta1.ILabelTextRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      LROperation<
        protosTypes.google.cloud.datalabeling.v1beta1.IAnnotatedDataset,
        protosTypes.google.cloud.datalabeling.v1beta1.ILabelOperationMetadata
      >,
      protosTypes.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  >;
  labelText(
    request: protosTypes.google.cloud.datalabeling.v1beta1.ILabelTextRequest,
    options: gax.CallOptions,
    callback: Callback<
      LROperation<
        protosTypes.google.cloud.datalabeling.v1beta1.IAnnotatedDataset,
        protosTypes.google.cloud.datalabeling.v1beta1.ILabelOperationMetadata
      >,
      protosTypes.google.longrunning.IOperation | undefined,
      {} | undefined
    >
  ): void;
  /**
   * Starts a labeling task for text. The type of text labeling task is
   * configured by feature in the request.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.datalabeling.v1beta1.TextClassificationConfig} request.textClassificationConfig
   *   Configuration for text classification task.
   *   One of text_classification_config and text_entity_extraction_config
   *   is required.
   * @param {google.cloud.datalabeling.v1beta1.TextEntityExtractionConfig} request.textEntityExtractionConfig
   *   Configuration for entity extraction task.
   *   One of text_classification_config and text_entity_extraction_config
   *   is required.
   * @param {string} request.parent
   *   Required. Name of the data set to request labeling task, format:
   *   projects/{project_id}/datasets/{dataset_id}
   * @param {google.cloud.datalabeling.v1beta1.HumanAnnotationConfig} request.basicConfig
   *   Required. Basic human annotation config.
   * @param {google.cloud.datalabeling.v1beta1.LabelTextRequest.Feature} request.feature
   *   Required. The type of text labeling task.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Operation]{@link google.longrunning.Operation}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  labelText(
    request: protosTypes.google.cloud.datalabeling.v1beta1.ILabelTextRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          LROperation<
            protosTypes.google.cloud.datalabeling.v1beta1.IAnnotatedDataset,
            protosTypes.google.cloud.datalabeling.v1beta1.ILabelOperationMetadata
          >,
          protosTypes.google.longrunning.IOperation | undefined,
          {} | undefined
        >,
    callback?: Callback<
      LROperation<
        protosTypes.google.cloud.datalabeling.v1beta1.IAnnotatedDataset,
        protosTypes.google.cloud.datalabeling.v1beta1.ILabelOperationMetadata
      >,
      protosTypes.google.longrunning.IOperation | undefined,
      {} | undefined
    >
  ): Promise<
    [
      LROperation<
        protosTypes.google.cloud.datalabeling.v1beta1.IAnnotatedDataset,
        protosTypes.google.cloud.datalabeling.v1beta1.ILabelOperationMetadata
      >,
      protosTypes.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    return this._innerApiCalls.labelText(request, options, callback);
  }
  createInstruction(
    request: protosTypes.google.cloud.datalabeling.v1beta1.ICreateInstructionRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      LROperation<
        protosTypes.google.cloud.datalabeling.v1beta1.IInstruction,
        protosTypes.google.cloud.datalabeling.v1beta1.ICreateInstructionMetadata
      >,
      protosTypes.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  >;
  createInstruction(
    request: protosTypes.google.cloud.datalabeling.v1beta1.ICreateInstructionRequest,
    options: gax.CallOptions,
    callback: Callback<
      LROperation<
        protosTypes.google.cloud.datalabeling.v1beta1.IInstruction,
        protosTypes.google.cloud.datalabeling.v1beta1.ICreateInstructionMetadata
      >,
      protosTypes.google.longrunning.IOperation | undefined,
      {} | undefined
    >
  ): void;
  /**
   * Creates an instruction for how data should be labeled.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Instruction resource parent, format:
   *   projects/{project_id}
   * @param {google.cloud.datalabeling.v1beta1.Instruction} request.instruction
   *   Required. Instruction of how to perform the labeling task.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Operation]{@link google.longrunning.Operation}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  createInstruction(
    request: protosTypes.google.cloud.datalabeling.v1beta1.ICreateInstructionRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          LROperation<
            protosTypes.google.cloud.datalabeling.v1beta1.IInstruction,
            protosTypes.google.cloud.datalabeling.v1beta1.ICreateInstructionMetadata
          >,
          protosTypes.google.longrunning.IOperation | undefined,
          {} | undefined
        >,
    callback?: Callback<
      LROperation<
        protosTypes.google.cloud.datalabeling.v1beta1.IInstruction,
        protosTypes.google.cloud.datalabeling.v1beta1.ICreateInstructionMetadata
      >,
      protosTypes.google.longrunning.IOperation | undefined,
      {} | undefined
    >
  ): Promise<
    [
      LROperation<
        protosTypes.google.cloud.datalabeling.v1beta1.IInstruction,
        protosTypes.google.cloud.datalabeling.v1beta1.ICreateInstructionMetadata
      >,
      protosTypes.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    return this._innerApiCalls.createInstruction(request, options, callback);
  }
  listDatasets(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IListDatasetsRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protosTypes.google.cloud.datalabeling.v1beta1.IDataset[],
      protosTypes.google.cloud.datalabeling.v1beta1.IListDatasetsRequest | null,
      protosTypes.google.cloud.datalabeling.v1beta1.IListDatasetsResponse
    ]
  >;
  listDatasets(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IListDatasetsRequest,
    options: gax.CallOptions,
    callback: Callback<
      protosTypes.google.cloud.datalabeling.v1beta1.IDataset[],
      protosTypes.google.cloud.datalabeling.v1beta1.IListDatasetsRequest | null,
      protosTypes.google.cloud.datalabeling.v1beta1.IListDatasetsResponse
    >
  ): void;
  /**
   * Lists datasets under a project. Pagination is supported.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Dataset resource parent, format:
   *   projects/{project_id}
   * @param {string} [request.filter]
   *   Optional. Filter on dataset is not supported at this moment.
   * @param {number} [request.pageSize]
   *   Optional. Requested page size. Server may return fewer results than
   *   requested. Default value is 100.
   * @param {string} [request.pageToken]
   *   Optional. A token identifying a page of results for the server to return.
   *   Typically obtained by
   *   [ListDatasetsResponse.next_page_token][google.cloud.datalabeling.v1beta1.ListDatasetsResponse.next_page_token] of the previous
   *   [DataLabelingService.ListDatasets] call.
   *   Returns the first page if empty.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [Dataset]{@link google.cloud.datalabeling.v1beta1.Dataset}.
   *   The client library support auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *
   *   When autoPaginate: false is specified through options, the array has three elements.
   *   The first element is Array of [Dataset]{@link google.cloud.datalabeling.v1beta1.Dataset} that corresponds to
   *   the one page received from the API server.
   *   If the second element is not null it contains the request object of type [ListDatasetsRequest]{@link google.cloud.datalabeling.v1beta1.ListDatasetsRequest}
   *   that can be used to obtain the next page of the results.
   *   If it is null, the next page does not exist.
   *   The third element contains the raw response received from the API server. Its type is
   *   [ListDatasetsResponse]{@link google.cloud.datalabeling.v1beta1.ListDatasetsResponse}.
   *
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  listDatasets(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IListDatasetsRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protosTypes.google.cloud.datalabeling.v1beta1.IDataset[],
          protosTypes.google.cloud.datalabeling.v1beta1.IListDatasetsRequest | null,
          protosTypes.google.cloud.datalabeling.v1beta1.IListDatasetsResponse
        >,
    callback?: Callback<
      protosTypes.google.cloud.datalabeling.v1beta1.IDataset[],
      protosTypes.google.cloud.datalabeling.v1beta1.IListDatasetsRequest | null,
      protosTypes.google.cloud.datalabeling.v1beta1.IListDatasetsResponse
    >
  ): Promise<
    [
      protosTypes.google.cloud.datalabeling.v1beta1.IDataset[],
      protosTypes.google.cloud.datalabeling.v1beta1.IListDatasetsRequest | null,
      protosTypes.google.cloud.datalabeling.v1beta1.IListDatasetsResponse
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    return this._innerApiCalls.listDatasets(request, options, callback);
  }

  /**
   * Equivalent to {@link listDatasets}, but returns a NodeJS Stream object.
   *
   * This fetches the paged responses for {@link listDatasets} continuously
   * and invokes the callback registered for 'data' event for each element in the
   * responses.
   *
   * The returned object has 'end' method when no more elements are required.
   *
   * autoPaginate option will be ignored.
   *
   * @see {@link https://nodejs.org/api/stream.html}
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Dataset resource parent, format:
   *   projects/{project_id}
   * @param {string} [request.filter]
   *   Optional. Filter on dataset is not supported at this moment.
   * @param {number} [request.pageSize]
   *   Optional. Requested page size. Server may return fewer results than
   *   requested. Default value is 100.
   * @param {string} [request.pageToken]
   *   Optional. A token identifying a page of results for the server to return.
   *   Typically obtained by
   *   [ListDatasetsResponse.next_page_token][google.cloud.datalabeling.v1beta1.ListDatasetsResponse.next_page_token] of the previous
   *   [DataLabelingService.ListDatasets] call.
   *   Returns the first page if empty.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [Dataset]{@link google.cloud.datalabeling.v1beta1.Dataset} on 'data' event.
   */
  listDatasetsStream(
    request?: protosTypes.google.cloud.datalabeling.v1beta1.IListDatasetsRequest,
    options?: gax.CallOptions | {}
  ): Transform {
    request = request || {};
    const callSettings = new gax.CallSettings(options);
    return this._descriptors.page.listDatasets.createStream(
      this._innerApiCalls.listDatasets as gax.GaxCall,
      request,
      callSettings
    );
  }
  listDataItems(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IListDataItemsRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protosTypes.google.cloud.datalabeling.v1beta1.IDataItem[],
      protosTypes.google.cloud.datalabeling.v1beta1.IListDataItemsRequest | null,
      protosTypes.google.cloud.datalabeling.v1beta1.IListDataItemsResponse
    ]
  >;
  listDataItems(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IListDataItemsRequest,
    options: gax.CallOptions,
    callback: Callback<
      protosTypes.google.cloud.datalabeling.v1beta1.IDataItem[],
      protosTypes.google.cloud.datalabeling.v1beta1.IListDataItemsRequest | null,
      protosTypes.google.cloud.datalabeling.v1beta1.IListDataItemsResponse
    >
  ): void;
  /**
   * Lists data items in a dataset. This API can be called after data
   * are imported into dataset. Pagination is supported.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Name of the dataset to list data items, format:
   *   projects/{project_id}/datasets/{dataset_id}
   * @param {string} [request.filter]
   *   Optional. Filter is not supported at this moment.
   * @param {number} [request.pageSize]
   *   Optional. Requested page size. Server may return fewer results than
   *   requested. Default value is 100.
   * @param {string} [request.pageToken]
   *   Optional. A token identifying a page of results for the server to return.
   *   Typically obtained by
   *   [ListDataItemsResponse.next_page_token][google.cloud.datalabeling.v1beta1.ListDataItemsResponse.next_page_token] of the previous
   *   [DataLabelingService.ListDataItems] call.
   *   Return first page if empty.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [DataItem]{@link google.cloud.datalabeling.v1beta1.DataItem}.
   *   The client library support auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *
   *   When autoPaginate: false is specified through options, the array has three elements.
   *   The first element is Array of [DataItem]{@link google.cloud.datalabeling.v1beta1.DataItem} that corresponds to
   *   the one page received from the API server.
   *   If the second element is not null it contains the request object of type [ListDataItemsRequest]{@link google.cloud.datalabeling.v1beta1.ListDataItemsRequest}
   *   that can be used to obtain the next page of the results.
   *   If it is null, the next page does not exist.
   *   The third element contains the raw response received from the API server. Its type is
   *   [ListDataItemsResponse]{@link google.cloud.datalabeling.v1beta1.ListDataItemsResponse}.
   *
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  listDataItems(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IListDataItemsRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protosTypes.google.cloud.datalabeling.v1beta1.IDataItem[],
          protosTypes.google.cloud.datalabeling.v1beta1.IListDataItemsRequest | null,
          protosTypes.google.cloud.datalabeling.v1beta1.IListDataItemsResponse
        >,
    callback?: Callback<
      protosTypes.google.cloud.datalabeling.v1beta1.IDataItem[],
      protosTypes.google.cloud.datalabeling.v1beta1.IListDataItemsRequest | null,
      protosTypes.google.cloud.datalabeling.v1beta1.IListDataItemsResponse
    >
  ): Promise<
    [
      protosTypes.google.cloud.datalabeling.v1beta1.IDataItem[],
      protosTypes.google.cloud.datalabeling.v1beta1.IListDataItemsRequest | null,
      protosTypes.google.cloud.datalabeling.v1beta1.IListDataItemsResponse
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    return this._innerApiCalls.listDataItems(request, options, callback);
  }

  /**
   * Equivalent to {@link listDataItems}, but returns a NodeJS Stream object.
   *
   * This fetches the paged responses for {@link listDataItems} continuously
   * and invokes the callback registered for 'data' event for each element in the
   * responses.
   *
   * The returned object has 'end' method when no more elements are required.
   *
   * autoPaginate option will be ignored.
   *
   * @see {@link https://nodejs.org/api/stream.html}
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Name of the dataset to list data items, format:
   *   projects/{project_id}/datasets/{dataset_id}
   * @param {string} [request.filter]
   *   Optional. Filter is not supported at this moment.
   * @param {number} [request.pageSize]
   *   Optional. Requested page size. Server may return fewer results than
   *   requested. Default value is 100.
   * @param {string} [request.pageToken]
   *   Optional. A token identifying a page of results for the server to return.
   *   Typically obtained by
   *   [ListDataItemsResponse.next_page_token][google.cloud.datalabeling.v1beta1.ListDataItemsResponse.next_page_token] of the previous
   *   [DataLabelingService.ListDataItems] call.
   *   Return first page if empty.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [DataItem]{@link google.cloud.datalabeling.v1beta1.DataItem} on 'data' event.
   */
  listDataItemsStream(
    request?: protosTypes.google.cloud.datalabeling.v1beta1.IListDataItemsRequest,
    options?: gax.CallOptions | {}
  ): Transform {
    request = request || {};
    const callSettings = new gax.CallSettings(options);
    return this._descriptors.page.listDataItems.createStream(
      this._innerApiCalls.listDataItems as gax.GaxCall,
      request,
      callSettings
    );
  }
  listAnnotatedDatasets(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IListAnnotatedDatasetsRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protosTypes.google.cloud.datalabeling.v1beta1.IAnnotatedDataset[],
      protosTypes.google.cloud.datalabeling.v1beta1.IListAnnotatedDatasetsRequest | null,
      protosTypes.google.cloud.datalabeling.v1beta1.IListAnnotatedDatasetsResponse
    ]
  >;
  listAnnotatedDatasets(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IListAnnotatedDatasetsRequest,
    options: gax.CallOptions,
    callback: Callback<
      protosTypes.google.cloud.datalabeling.v1beta1.IAnnotatedDataset[],
      protosTypes.google.cloud.datalabeling.v1beta1.IListAnnotatedDatasetsRequest | null,
      protosTypes.google.cloud.datalabeling.v1beta1.IListAnnotatedDatasetsResponse
    >
  ): void;
  /**
   * Lists annotated datasets for a dataset. Pagination is supported.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Name of the dataset to list annotated datasets, format:
   *   projects/{project_id}/datasets/{dataset_id}
   * @param {string} [request.filter]
   *   Optional. Filter is not supported at this moment.
   * @param {number} [request.pageSize]
   *   Optional. Requested page size. Server may return fewer results than
   *   requested. Default value is 100.
   * @param {string} [request.pageToken]
   *   Optional. A token identifying a page of results for the server to return.
   *   Typically obtained by
   *   [ListAnnotatedDatasetsResponse.next_page_token][google.cloud.datalabeling.v1beta1.ListAnnotatedDatasetsResponse.next_page_token] of the previous
   *   [DataLabelingService.ListAnnotatedDatasets] call.
   *   Return first page if empty.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [AnnotatedDataset]{@link google.cloud.datalabeling.v1beta1.AnnotatedDataset}.
   *   The client library support auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *
   *   When autoPaginate: false is specified through options, the array has three elements.
   *   The first element is Array of [AnnotatedDataset]{@link google.cloud.datalabeling.v1beta1.AnnotatedDataset} that corresponds to
   *   the one page received from the API server.
   *   If the second element is not null it contains the request object of type [ListAnnotatedDatasetsRequest]{@link google.cloud.datalabeling.v1beta1.ListAnnotatedDatasetsRequest}
   *   that can be used to obtain the next page of the results.
   *   If it is null, the next page does not exist.
   *   The third element contains the raw response received from the API server. Its type is
   *   [ListAnnotatedDatasetsResponse]{@link google.cloud.datalabeling.v1beta1.ListAnnotatedDatasetsResponse}.
   *
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  listAnnotatedDatasets(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IListAnnotatedDatasetsRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protosTypes.google.cloud.datalabeling.v1beta1.IAnnotatedDataset[],
          protosTypes.google.cloud.datalabeling.v1beta1.IListAnnotatedDatasetsRequest | null,
          protosTypes.google.cloud.datalabeling.v1beta1.IListAnnotatedDatasetsResponse
        >,
    callback?: Callback<
      protosTypes.google.cloud.datalabeling.v1beta1.IAnnotatedDataset[],
      protosTypes.google.cloud.datalabeling.v1beta1.IListAnnotatedDatasetsRequest | null,
      protosTypes.google.cloud.datalabeling.v1beta1.IListAnnotatedDatasetsResponse
    >
  ): Promise<
    [
      protosTypes.google.cloud.datalabeling.v1beta1.IAnnotatedDataset[],
      protosTypes.google.cloud.datalabeling.v1beta1.IListAnnotatedDatasetsRequest | null,
      protosTypes.google.cloud.datalabeling.v1beta1.IListAnnotatedDatasetsResponse
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    return this._innerApiCalls.listAnnotatedDatasets(
      request,
      options,
      callback
    );
  }

  /**
   * Equivalent to {@link listAnnotatedDatasets}, but returns a NodeJS Stream object.
   *
   * This fetches the paged responses for {@link listAnnotatedDatasets} continuously
   * and invokes the callback registered for 'data' event for each element in the
   * responses.
   *
   * The returned object has 'end' method when no more elements are required.
   *
   * autoPaginate option will be ignored.
   *
   * @see {@link https://nodejs.org/api/stream.html}
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Name of the dataset to list annotated datasets, format:
   *   projects/{project_id}/datasets/{dataset_id}
   * @param {string} [request.filter]
   *   Optional. Filter is not supported at this moment.
   * @param {number} [request.pageSize]
   *   Optional. Requested page size. Server may return fewer results than
   *   requested. Default value is 100.
   * @param {string} [request.pageToken]
   *   Optional. A token identifying a page of results for the server to return.
   *   Typically obtained by
   *   [ListAnnotatedDatasetsResponse.next_page_token][google.cloud.datalabeling.v1beta1.ListAnnotatedDatasetsResponse.next_page_token] of the previous
   *   [DataLabelingService.ListAnnotatedDatasets] call.
   *   Return first page if empty.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [AnnotatedDataset]{@link google.cloud.datalabeling.v1beta1.AnnotatedDataset} on 'data' event.
   */
  listAnnotatedDatasetsStream(
    request?: protosTypes.google.cloud.datalabeling.v1beta1.IListAnnotatedDatasetsRequest,
    options?: gax.CallOptions | {}
  ): Transform {
    request = request || {};
    const callSettings = new gax.CallSettings(options);
    return this._descriptors.page.listAnnotatedDatasets.createStream(
      this._innerApiCalls.listAnnotatedDatasets as gax.GaxCall,
      request,
      callSettings
    );
  }
  listExamples(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IListExamplesRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protosTypes.google.cloud.datalabeling.v1beta1.IExample[],
      protosTypes.google.cloud.datalabeling.v1beta1.IListExamplesRequest | null,
      protosTypes.google.cloud.datalabeling.v1beta1.IListExamplesResponse
    ]
  >;
  listExamples(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IListExamplesRequest,
    options: gax.CallOptions,
    callback: Callback<
      protosTypes.google.cloud.datalabeling.v1beta1.IExample[],
      protosTypes.google.cloud.datalabeling.v1beta1.IListExamplesRequest | null,
      protosTypes.google.cloud.datalabeling.v1beta1.IListExamplesResponse
    >
  ): void;
  /**
   * Lists examples in an annotated dataset. Pagination is supported.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Example resource parent.
   * @param {string} [request.filter]
   *   Optional. An expression for filtering Examples. For annotated datasets that
   *   have annotation spec set, filter by
   *   annotation_spec.display_name is supported. Format
   *   "annotation_spec.display_name = {display_name}"
   * @param {number} [request.pageSize]
   *   Optional. Requested page size. Server may return fewer results than
   *   requested. Default value is 100.
   * @param {string} [request.pageToken]
   *   Optional. A token identifying a page of results for the server to return.
   *   Typically obtained by
   *   [ListExamplesResponse.next_page_token][google.cloud.datalabeling.v1beta1.ListExamplesResponse.next_page_token] of the previous
   *   [DataLabelingService.ListExamples] call.
   *   Return first page if empty.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [Example]{@link google.cloud.datalabeling.v1beta1.Example}.
   *   The client library support auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *
   *   When autoPaginate: false is specified through options, the array has three elements.
   *   The first element is Array of [Example]{@link google.cloud.datalabeling.v1beta1.Example} that corresponds to
   *   the one page received from the API server.
   *   If the second element is not null it contains the request object of type [ListExamplesRequest]{@link google.cloud.datalabeling.v1beta1.ListExamplesRequest}
   *   that can be used to obtain the next page of the results.
   *   If it is null, the next page does not exist.
   *   The third element contains the raw response received from the API server. Its type is
   *   [ListExamplesResponse]{@link google.cloud.datalabeling.v1beta1.ListExamplesResponse}.
   *
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  listExamples(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IListExamplesRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protosTypes.google.cloud.datalabeling.v1beta1.IExample[],
          protosTypes.google.cloud.datalabeling.v1beta1.IListExamplesRequest | null,
          protosTypes.google.cloud.datalabeling.v1beta1.IListExamplesResponse
        >,
    callback?: Callback<
      protosTypes.google.cloud.datalabeling.v1beta1.IExample[],
      protosTypes.google.cloud.datalabeling.v1beta1.IListExamplesRequest | null,
      protosTypes.google.cloud.datalabeling.v1beta1.IListExamplesResponse
    >
  ): Promise<
    [
      protosTypes.google.cloud.datalabeling.v1beta1.IExample[],
      protosTypes.google.cloud.datalabeling.v1beta1.IListExamplesRequest | null,
      protosTypes.google.cloud.datalabeling.v1beta1.IListExamplesResponse
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    return this._innerApiCalls.listExamples(request, options, callback);
  }

  /**
   * Equivalent to {@link listExamples}, but returns a NodeJS Stream object.
   *
   * This fetches the paged responses for {@link listExamples} continuously
   * and invokes the callback registered for 'data' event for each element in the
   * responses.
   *
   * The returned object has 'end' method when no more elements are required.
   *
   * autoPaginate option will be ignored.
   *
   * @see {@link https://nodejs.org/api/stream.html}
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Example resource parent.
   * @param {string} [request.filter]
   *   Optional. An expression for filtering Examples. For annotated datasets that
   *   have annotation spec set, filter by
   *   annotation_spec.display_name is supported. Format
   *   "annotation_spec.display_name = {display_name}"
   * @param {number} [request.pageSize]
   *   Optional. Requested page size. Server may return fewer results than
   *   requested. Default value is 100.
   * @param {string} [request.pageToken]
   *   Optional. A token identifying a page of results for the server to return.
   *   Typically obtained by
   *   [ListExamplesResponse.next_page_token][google.cloud.datalabeling.v1beta1.ListExamplesResponse.next_page_token] of the previous
   *   [DataLabelingService.ListExamples] call.
   *   Return first page if empty.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [Example]{@link google.cloud.datalabeling.v1beta1.Example} on 'data' event.
   */
  listExamplesStream(
    request?: protosTypes.google.cloud.datalabeling.v1beta1.IListExamplesRequest,
    options?: gax.CallOptions | {}
  ): Transform {
    request = request || {};
    const callSettings = new gax.CallSettings(options);
    return this._descriptors.page.listExamples.createStream(
      this._innerApiCalls.listExamples as gax.GaxCall,
      request,
      callSettings
    );
  }
  listAnnotationSpecSets(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IListAnnotationSpecSetsRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protosTypes.google.cloud.datalabeling.v1beta1.IAnnotationSpecSet[],
      protosTypes.google.cloud.datalabeling.v1beta1.IListAnnotationSpecSetsRequest | null,
      protosTypes.google.cloud.datalabeling.v1beta1.IListAnnotationSpecSetsResponse
    ]
  >;
  listAnnotationSpecSets(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IListAnnotationSpecSetsRequest,
    options: gax.CallOptions,
    callback: Callback<
      protosTypes.google.cloud.datalabeling.v1beta1.IAnnotationSpecSet[],
      protosTypes.google.cloud.datalabeling.v1beta1.IListAnnotationSpecSetsRequest | null,
      protosTypes.google.cloud.datalabeling.v1beta1.IListAnnotationSpecSetsResponse
    >
  ): void;
  /**
   * Lists annotation spec sets for a project. Pagination is supported.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Parent of AnnotationSpecSet resource, format:
   *   projects/{project_id}
   * @param {string} [request.filter]
   *   Optional. Filter is not supported at this moment.
   * @param {number} [request.pageSize]
   *   Optional. Requested page size. Server may return fewer results than
   *   requested. Default value is 100.
   * @param {string} [request.pageToken]
   *   Optional. A token identifying a page of results for the server to return.
   *   Typically obtained by
   *   [ListAnnotationSpecSetsResponse.next_page_token][google.cloud.datalabeling.v1beta1.ListAnnotationSpecSetsResponse.next_page_token] of the previous
   *   [DataLabelingService.ListAnnotationSpecSets] call.
   *   Return first page if empty.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [AnnotationSpecSet]{@link google.cloud.datalabeling.v1beta1.AnnotationSpecSet}.
   *   The client library support auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *
   *   When autoPaginate: false is specified through options, the array has three elements.
   *   The first element is Array of [AnnotationSpecSet]{@link google.cloud.datalabeling.v1beta1.AnnotationSpecSet} that corresponds to
   *   the one page received from the API server.
   *   If the second element is not null it contains the request object of type [ListAnnotationSpecSetsRequest]{@link google.cloud.datalabeling.v1beta1.ListAnnotationSpecSetsRequest}
   *   that can be used to obtain the next page of the results.
   *   If it is null, the next page does not exist.
   *   The third element contains the raw response received from the API server. Its type is
   *   [ListAnnotationSpecSetsResponse]{@link google.cloud.datalabeling.v1beta1.ListAnnotationSpecSetsResponse}.
   *
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  listAnnotationSpecSets(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IListAnnotationSpecSetsRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protosTypes.google.cloud.datalabeling.v1beta1.IAnnotationSpecSet[],
          protosTypes.google.cloud.datalabeling.v1beta1.IListAnnotationSpecSetsRequest | null,
          protosTypes.google.cloud.datalabeling.v1beta1.IListAnnotationSpecSetsResponse
        >,
    callback?: Callback<
      protosTypes.google.cloud.datalabeling.v1beta1.IAnnotationSpecSet[],
      protosTypes.google.cloud.datalabeling.v1beta1.IListAnnotationSpecSetsRequest | null,
      protosTypes.google.cloud.datalabeling.v1beta1.IListAnnotationSpecSetsResponse
    >
  ): Promise<
    [
      protosTypes.google.cloud.datalabeling.v1beta1.IAnnotationSpecSet[],
      protosTypes.google.cloud.datalabeling.v1beta1.IListAnnotationSpecSetsRequest | null,
      protosTypes.google.cloud.datalabeling.v1beta1.IListAnnotationSpecSetsResponse
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    return this._innerApiCalls.listAnnotationSpecSets(
      request,
      options,
      callback
    );
  }

  /**
   * Equivalent to {@link listAnnotationSpecSets}, but returns a NodeJS Stream object.
   *
   * This fetches the paged responses for {@link listAnnotationSpecSets} continuously
   * and invokes the callback registered for 'data' event for each element in the
   * responses.
   *
   * The returned object has 'end' method when no more elements are required.
   *
   * autoPaginate option will be ignored.
   *
   * @see {@link https://nodejs.org/api/stream.html}
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Parent of AnnotationSpecSet resource, format:
   *   projects/{project_id}
   * @param {string} [request.filter]
   *   Optional. Filter is not supported at this moment.
   * @param {number} [request.pageSize]
   *   Optional. Requested page size. Server may return fewer results than
   *   requested. Default value is 100.
   * @param {string} [request.pageToken]
   *   Optional. A token identifying a page of results for the server to return.
   *   Typically obtained by
   *   [ListAnnotationSpecSetsResponse.next_page_token][google.cloud.datalabeling.v1beta1.ListAnnotationSpecSetsResponse.next_page_token] of the previous
   *   [DataLabelingService.ListAnnotationSpecSets] call.
   *   Return first page if empty.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [AnnotationSpecSet]{@link google.cloud.datalabeling.v1beta1.AnnotationSpecSet} on 'data' event.
   */
  listAnnotationSpecSetsStream(
    request?: protosTypes.google.cloud.datalabeling.v1beta1.IListAnnotationSpecSetsRequest,
    options?: gax.CallOptions | {}
  ): Transform {
    request = request || {};
    const callSettings = new gax.CallSettings(options);
    return this._descriptors.page.listAnnotationSpecSets.createStream(
      this._innerApiCalls.listAnnotationSpecSets as gax.GaxCall,
      request,
      callSettings
    );
  }
  listInstructions(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IListInstructionsRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protosTypes.google.cloud.datalabeling.v1beta1.IInstruction[],
      protosTypes.google.cloud.datalabeling.v1beta1.IListInstructionsRequest | null,
      protosTypes.google.cloud.datalabeling.v1beta1.IListInstructionsResponse
    ]
  >;
  listInstructions(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IListInstructionsRequest,
    options: gax.CallOptions,
    callback: Callback<
      protosTypes.google.cloud.datalabeling.v1beta1.IInstruction[],
      protosTypes.google.cloud.datalabeling.v1beta1.IListInstructionsRequest | null,
      protosTypes.google.cloud.datalabeling.v1beta1.IListInstructionsResponse
    >
  ): void;
  /**
   * Lists instructions for a project. Pagination is supported.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Instruction resource parent, format:
   *   projects/{project_id}
   * @param {string} [request.filter]
   *   Optional. Filter is not supported at this moment.
   * @param {number} [request.pageSize]
   *   Optional. Requested page size. Server may return fewer results than
   *   requested. Default value is 100.
   * @param {string} [request.pageToken]
   *   Optional. A token identifying a page of results for the server to return.
   *   Typically obtained by
   *   [ListInstructionsResponse.next_page_token][google.cloud.datalabeling.v1beta1.ListInstructionsResponse.next_page_token] of the previous
   *   [DataLabelingService.ListInstructions] call.
   *   Return first page if empty.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [Instruction]{@link google.cloud.datalabeling.v1beta1.Instruction}.
   *   The client library support auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *
   *   When autoPaginate: false is specified through options, the array has three elements.
   *   The first element is Array of [Instruction]{@link google.cloud.datalabeling.v1beta1.Instruction} that corresponds to
   *   the one page received from the API server.
   *   If the second element is not null it contains the request object of type [ListInstructionsRequest]{@link google.cloud.datalabeling.v1beta1.ListInstructionsRequest}
   *   that can be used to obtain the next page of the results.
   *   If it is null, the next page does not exist.
   *   The third element contains the raw response received from the API server. Its type is
   *   [ListInstructionsResponse]{@link google.cloud.datalabeling.v1beta1.ListInstructionsResponse}.
   *
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  listInstructions(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IListInstructionsRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protosTypes.google.cloud.datalabeling.v1beta1.IInstruction[],
          protosTypes.google.cloud.datalabeling.v1beta1.IListInstructionsRequest | null,
          protosTypes.google.cloud.datalabeling.v1beta1.IListInstructionsResponse
        >,
    callback?: Callback<
      protosTypes.google.cloud.datalabeling.v1beta1.IInstruction[],
      protosTypes.google.cloud.datalabeling.v1beta1.IListInstructionsRequest | null,
      protosTypes.google.cloud.datalabeling.v1beta1.IListInstructionsResponse
    >
  ): Promise<
    [
      protosTypes.google.cloud.datalabeling.v1beta1.IInstruction[],
      protosTypes.google.cloud.datalabeling.v1beta1.IListInstructionsRequest | null,
      protosTypes.google.cloud.datalabeling.v1beta1.IListInstructionsResponse
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    return this._innerApiCalls.listInstructions(request, options, callback);
  }

  /**
   * Equivalent to {@link listInstructions}, but returns a NodeJS Stream object.
   *
   * This fetches the paged responses for {@link listInstructions} continuously
   * and invokes the callback registered for 'data' event for each element in the
   * responses.
   *
   * The returned object has 'end' method when no more elements are required.
   *
   * autoPaginate option will be ignored.
   *
   * @see {@link https://nodejs.org/api/stream.html}
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Instruction resource parent, format:
   *   projects/{project_id}
   * @param {string} [request.filter]
   *   Optional. Filter is not supported at this moment.
   * @param {number} [request.pageSize]
   *   Optional. Requested page size. Server may return fewer results than
   *   requested. Default value is 100.
   * @param {string} [request.pageToken]
   *   Optional. A token identifying a page of results for the server to return.
   *   Typically obtained by
   *   [ListInstructionsResponse.next_page_token][google.cloud.datalabeling.v1beta1.ListInstructionsResponse.next_page_token] of the previous
   *   [DataLabelingService.ListInstructions] call.
   *   Return first page if empty.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [Instruction]{@link google.cloud.datalabeling.v1beta1.Instruction} on 'data' event.
   */
  listInstructionsStream(
    request?: protosTypes.google.cloud.datalabeling.v1beta1.IListInstructionsRequest,
    options?: gax.CallOptions | {}
  ): Transform {
    request = request || {};
    const callSettings = new gax.CallSettings(options);
    return this._descriptors.page.listInstructions.createStream(
      this._innerApiCalls.listInstructions as gax.GaxCall,
      request,
      callSettings
    );
  }
  searchEvaluations(
    request: protosTypes.google.cloud.datalabeling.v1beta1.ISearchEvaluationsRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protosTypes.google.cloud.datalabeling.v1beta1.IEvaluation[],
      protosTypes.google.cloud.datalabeling.v1beta1.ISearchEvaluationsRequest | null,
      protosTypes.google.cloud.datalabeling.v1beta1.ISearchEvaluationsResponse
    ]
  >;
  searchEvaluations(
    request: protosTypes.google.cloud.datalabeling.v1beta1.ISearchEvaluationsRequest,
    options: gax.CallOptions,
    callback: Callback<
      protosTypes.google.cloud.datalabeling.v1beta1.IEvaluation[],
      protosTypes.google.cloud.datalabeling.v1beta1.ISearchEvaluationsRequest | null,
      protosTypes.google.cloud.datalabeling.v1beta1.ISearchEvaluationsResponse
    >
  ): void;
  /**
   * Searches [evaluations][google.cloud.datalabeling.v1beta1.Evaluation] within a project.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Evaluation search parent (project ID). Format:
   *   "projects/<var>{project_id}</var>"
   * @param {string} [request.filter]
   *   Optional. To search evaluations, you can filter by the following:
   *
   *   * evaluation<span>_</span>job.evaluation_job_id (the last part of
   *     [EvaluationJob.name][google.cloud.datalabeling.v1beta1.EvaluationJob.name])
   *   * evaluation<span>_</span>job.model_id (the <var>{model_name}</var> portion
   *     of [EvaluationJob.modelVersion][google.cloud.datalabeling.v1beta1.EvaluationJob.model_version])
   *   * evaluation<span>_</span>job.evaluation_job_run_time_start (Minimum
   *     threshold for the
   *     [evaluationJobRunTime][google.cloud.datalabeling.v1beta1.Evaluation.evaluation_job_run_time] that created
   *     the evaluation)
   *   * evaluation<span>_</span>job.evaluation_job_run_time_end (Maximum
   *     threshold for the
   *     [evaluationJobRunTime][google.cloud.datalabeling.v1beta1.Evaluation.evaluation_job_run_time] that created
   *     the evaluation)
   *   * evaluation<span>_</span>job.job_state ([EvaluationJob.state][google.cloud.datalabeling.v1beta1.EvaluationJob.state])
   *   * annotation<span>_</span>spec.display_name (the Evaluation contains a
   *     metric for the annotation spec with this
   *     [displayName][google.cloud.datalabeling.v1beta1.AnnotationSpec.display_name])
   *
   *   To filter by multiple critiera, use the `AND` operator or the `OR`
   *   operator. The following examples shows a string that filters by several
   *   critiera:
   *
   *   "evaluation<span>_</span>job.evaluation_job_id =
   *   <var>{evaluation_job_id}</var> AND evaluation<span>_</span>job.model_id =
   *   <var>{model_name}</var> AND
   *   evaluation<span>_</span>job.evaluation_job_run_time_start =
   *   <var>{timestamp_1}</var> AND
   *   evaluation<span>_</span>job.evaluation_job_run_time_end =
   *   <var>{timestamp_2}</var> AND annotation<span>_</span>spec.display_name =
   *   <var>{display_name}</var>"
   * @param {number} [request.pageSize]
   *   Optional. Requested page size. Server may return fewer results than
   *   requested. Default value is 100.
   * @param {string} [request.pageToken]
   *   Optional. A token identifying a page of results for the server to return.
   *   Typically obtained by the
   *   [nextPageToken][google.cloud.datalabeling.v1beta1.SearchEvaluationsResponse.next_page_token] of the response
   *   to a previous search request.
   *
   *   If you don't specify this field, the API call requests the first page of
   *   the search.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [Evaluation]{@link google.cloud.datalabeling.v1beta1.Evaluation}.
   *   The client library support auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *
   *   When autoPaginate: false is specified through options, the array has three elements.
   *   The first element is Array of [Evaluation]{@link google.cloud.datalabeling.v1beta1.Evaluation} that corresponds to
   *   the one page received from the API server.
   *   If the second element is not null it contains the request object of type [SearchEvaluationsRequest]{@link google.cloud.datalabeling.v1beta1.SearchEvaluationsRequest}
   *   that can be used to obtain the next page of the results.
   *   If it is null, the next page does not exist.
   *   The third element contains the raw response received from the API server. Its type is
   *   [SearchEvaluationsResponse]{@link google.cloud.datalabeling.v1beta1.SearchEvaluationsResponse}.
   *
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  searchEvaluations(
    request: protosTypes.google.cloud.datalabeling.v1beta1.ISearchEvaluationsRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protosTypes.google.cloud.datalabeling.v1beta1.IEvaluation[],
          protosTypes.google.cloud.datalabeling.v1beta1.ISearchEvaluationsRequest | null,
          protosTypes.google.cloud.datalabeling.v1beta1.ISearchEvaluationsResponse
        >,
    callback?: Callback<
      protosTypes.google.cloud.datalabeling.v1beta1.IEvaluation[],
      protosTypes.google.cloud.datalabeling.v1beta1.ISearchEvaluationsRequest | null,
      protosTypes.google.cloud.datalabeling.v1beta1.ISearchEvaluationsResponse
    >
  ): Promise<
    [
      protosTypes.google.cloud.datalabeling.v1beta1.IEvaluation[],
      protosTypes.google.cloud.datalabeling.v1beta1.ISearchEvaluationsRequest | null,
      protosTypes.google.cloud.datalabeling.v1beta1.ISearchEvaluationsResponse
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    return this._innerApiCalls.searchEvaluations(request, options, callback);
  }

  /**
   * Equivalent to {@link searchEvaluations}, but returns a NodeJS Stream object.
   *
   * This fetches the paged responses for {@link searchEvaluations} continuously
   * and invokes the callback registered for 'data' event for each element in the
   * responses.
   *
   * The returned object has 'end' method when no more elements are required.
   *
   * autoPaginate option will be ignored.
   *
   * @see {@link https://nodejs.org/api/stream.html}
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Evaluation search parent (project ID). Format:
   *   "projects/<var>{project_id}</var>"
   * @param {string} [request.filter]
   *   Optional. To search evaluations, you can filter by the following:
   *
   *   * evaluation<span>_</span>job.evaluation_job_id (the last part of
   *     [EvaluationJob.name][google.cloud.datalabeling.v1beta1.EvaluationJob.name])
   *   * evaluation<span>_</span>job.model_id (the <var>{model_name}</var> portion
   *     of [EvaluationJob.modelVersion][google.cloud.datalabeling.v1beta1.EvaluationJob.model_version])
   *   * evaluation<span>_</span>job.evaluation_job_run_time_start (Minimum
   *     threshold for the
   *     [evaluationJobRunTime][google.cloud.datalabeling.v1beta1.Evaluation.evaluation_job_run_time] that created
   *     the evaluation)
   *   * evaluation<span>_</span>job.evaluation_job_run_time_end (Maximum
   *     threshold for the
   *     [evaluationJobRunTime][google.cloud.datalabeling.v1beta1.Evaluation.evaluation_job_run_time] that created
   *     the evaluation)
   *   * evaluation<span>_</span>job.job_state ([EvaluationJob.state][google.cloud.datalabeling.v1beta1.EvaluationJob.state])
   *   * annotation<span>_</span>spec.display_name (the Evaluation contains a
   *     metric for the annotation spec with this
   *     [displayName][google.cloud.datalabeling.v1beta1.AnnotationSpec.display_name])
   *
   *   To filter by multiple critiera, use the `AND` operator or the `OR`
   *   operator. The following examples shows a string that filters by several
   *   critiera:
   *
   *   "evaluation<span>_</span>job.evaluation_job_id =
   *   <var>{evaluation_job_id}</var> AND evaluation<span>_</span>job.model_id =
   *   <var>{model_name}</var> AND
   *   evaluation<span>_</span>job.evaluation_job_run_time_start =
   *   <var>{timestamp_1}</var> AND
   *   evaluation<span>_</span>job.evaluation_job_run_time_end =
   *   <var>{timestamp_2}</var> AND annotation<span>_</span>spec.display_name =
   *   <var>{display_name}</var>"
   * @param {number} [request.pageSize]
   *   Optional. Requested page size. Server may return fewer results than
   *   requested. Default value is 100.
   * @param {string} [request.pageToken]
   *   Optional. A token identifying a page of results for the server to return.
   *   Typically obtained by the
   *   [nextPageToken][google.cloud.datalabeling.v1beta1.SearchEvaluationsResponse.next_page_token] of the response
   *   to a previous search request.
   *
   *   If you don't specify this field, the API call requests the first page of
   *   the search.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [Evaluation]{@link google.cloud.datalabeling.v1beta1.Evaluation} on 'data' event.
   */
  searchEvaluationsStream(
    request?: protosTypes.google.cloud.datalabeling.v1beta1.ISearchEvaluationsRequest,
    options?: gax.CallOptions | {}
  ): Transform {
    request = request || {};
    const callSettings = new gax.CallSettings(options);
    return this._descriptors.page.searchEvaluations.createStream(
      this._innerApiCalls.searchEvaluations as gax.GaxCall,
      request,
      callSettings
    );
  }
  searchExampleComparisons(
    request: protosTypes.google.cloud.datalabeling.v1beta1.ISearchExampleComparisonsRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protosTypes.google.cloud.datalabeling.v1beta1.SearchExampleComparisonsResponse.IExampleComparison[],
      protosTypes.google.cloud.datalabeling.v1beta1.ISearchExampleComparisonsRequest | null,
      protosTypes.google.cloud.datalabeling.v1beta1.ISearchExampleComparisonsResponse
    ]
  >;
  searchExampleComparisons(
    request: protosTypes.google.cloud.datalabeling.v1beta1.ISearchExampleComparisonsRequest,
    options: gax.CallOptions,
    callback: Callback<
      protosTypes.google.cloud.datalabeling.v1beta1.SearchExampleComparisonsResponse.IExampleComparison[],
      protosTypes.google.cloud.datalabeling.v1beta1.ISearchExampleComparisonsRequest | null,
      protosTypes.google.cloud.datalabeling.v1beta1.ISearchExampleComparisonsResponse
    >
  ): void;
  /**
   * Searches example comparisons from an evaluation. The return format is a
   * list of example comparisons that show ground truth and prediction(s) for
   * a single input. Search by providing an evaluation ID.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Name of the [Evaluation][google.cloud.datalabeling.v1beta1.Evaluation] resource to search for example
   *   comparisons from. Format:
   *
   *   "projects/<var>{project_id}</var>/datasets/<var>{dataset_id}</var>/evaluations/<var>{evaluation_id}</var>"
   * @param {number} [request.pageSize]
   *   Optional. Requested page size. Server may return fewer results than
   *   requested. Default value is 100.
   * @param {string} [request.pageToken]
   *   Optional. A token identifying a page of results for the server to return.
   *   Typically obtained by the
   *   [nextPageToken][SearchExampleComparisons.next_page_token] of the response
   *   to a previous search rquest.
   *
   *   If you don't specify this field, the API call requests the first page of
   *   the search.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [ExampleComparison]{@link google.cloud.datalabeling.v1beta1.SearchExampleComparisonsResponse.ExampleComparison}.
   *   The client library support auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *
   *   When autoPaginate: false is specified through options, the array has three elements.
   *   The first element is Array of [ExampleComparison]{@link google.cloud.datalabeling.v1beta1.SearchExampleComparisonsResponse.ExampleComparison} that corresponds to
   *   the one page received from the API server.
   *   If the second element is not null it contains the request object of type [SearchExampleComparisonsRequest]{@link google.cloud.datalabeling.v1beta1.SearchExampleComparisonsRequest}
   *   that can be used to obtain the next page of the results.
   *   If it is null, the next page does not exist.
   *   The third element contains the raw response received from the API server. Its type is
   *   [SearchExampleComparisonsResponse]{@link google.cloud.datalabeling.v1beta1.SearchExampleComparisonsResponse}.
   *
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  searchExampleComparisons(
    request: protosTypes.google.cloud.datalabeling.v1beta1.ISearchExampleComparisonsRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protosTypes.google.cloud.datalabeling.v1beta1.SearchExampleComparisonsResponse.IExampleComparison[],
          protosTypes.google.cloud.datalabeling.v1beta1.ISearchExampleComparisonsRequest | null,
          protosTypes.google.cloud.datalabeling.v1beta1.ISearchExampleComparisonsResponse
        >,
    callback?: Callback<
      protosTypes.google.cloud.datalabeling.v1beta1.SearchExampleComparisonsResponse.IExampleComparison[],
      protosTypes.google.cloud.datalabeling.v1beta1.ISearchExampleComparisonsRequest | null,
      protosTypes.google.cloud.datalabeling.v1beta1.ISearchExampleComparisonsResponse
    >
  ): Promise<
    [
      protosTypes.google.cloud.datalabeling.v1beta1.SearchExampleComparisonsResponse.IExampleComparison[],
      protosTypes.google.cloud.datalabeling.v1beta1.ISearchExampleComparisonsRequest | null,
      protosTypes.google.cloud.datalabeling.v1beta1.ISearchExampleComparisonsResponse
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    return this._innerApiCalls.searchExampleComparisons(
      request,
      options,
      callback
    );
  }

  /**
   * Equivalent to {@link searchExampleComparisons}, but returns a NodeJS Stream object.
   *
   * This fetches the paged responses for {@link searchExampleComparisons} continuously
   * and invokes the callback registered for 'data' event for each element in the
   * responses.
   *
   * The returned object has 'end' method when no more elements are required.
   *
   * autoPaginate option will be ignored.
   *
   * @see {@link https://nodejs.org/api/stream.html}
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Name of the [Evaluation][google.cloud.datalabeling.v1beta1.Evaluation] resource to search for example
   *   comparisons from. Format:
   *
   *   "projects/<var>{project_id}</var>/datasets/<var>{dataset_id}</var>/evaluations/<var>{evaluation_id}</var>"
   * @param {number} [request.pageSize]
   *   Optional. Requested page size. Server may return fewer results than
   *   requested. Default value is 100.
   * @param {string} [request.pageToken]
   *   Optional. A token identifying a page of results for the server to return.
   *   Typically obtained by the
   *   [nextPageToken][SearchExampleComparisons.next_page_token] of the response
   *   to a previous search rquest.
   *
   *   If you don't specify this field, the API call requests the first page of
   *   the search.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [ExampleComparison]{@link google.cloud.datalabeling.v1beta1.SearchExampleComparisonsResponse.ExampleComparison} on 'data' event.
   */
  searchExampleComparisonsStream(
    request?: protosTypes.google.cloud.datalabeling.v1beta1.ISearchExampleComparisonsRequest,
    options?: gax.CallOptions | {}
  ): Transform {
    request = request || {};
    const callSettings = new gax.CallSettings(options);
    return this._descriptors.page.searchExampleComparisons.createStream(
      this._innerApiCalls.searchExampleComparisons as gax.GaxCall,
      request,
      callSettings
    );
  }
  listEvaluationJobs(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IListEvaluationJobsRequest,
    options?: gax.CallOptions
  ): Promise<
    [
      protosTypes.google.cloud.datalabeling.v1beta1.IEvaluationJob[],
      protosTypes.google.cloud.datalabeling.v1beta1.IListEvaluationJobsRequest | null,
      protosTypes.google.cloud.datalabeling.v1beta1.IListEvaluationJobsResponse
    ]
  >;
  listEvaluationJobs(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IListEvaluationJobsRequest,
    options: gax.CallOptions,
    callback: Callback<
      protosTypes.google.cloud.datalabeling.v1beta1.IEvaluationJob[],
      protosTypes.google.cloud.datalabeling.v1beta1.IListEvaluationJobsRequest | null,
      protosTypes.google.cloud.datalabeling.v1beta1.IListEvaluationJobsResponse
    >
  ): void;
  /**
   * Lists all evaluation jobs within a project with possible filters.
   * Pagination is supported.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Evaluation job resource parent. Format:
   *   "projects/<var>{project_id}</var>"
   * @param {string} [request.filter]
   *   Optional. You can filter the jobs to list by model_id (also known as
   *   model_name, as described in
   *   [EvaluationJob.modelVersion][google.cloud.datalabeling.v1beta1.EvaluationJob.model_version]) or by
   *   evaluation job state (as described in [EvaluationJob.state][google.cloud.datalabeling.v1beta1.EvaluationJob.state]). To filter
   *   by both criteria, use the `AND` operator or the `OR` operator. For example,
   *   you can use the following string for your filter:
   *   "evaluation<span>_</span>job.model_id = <var>{model_name}</var> AND
   *   evaluation<span>_</span>job.state = <var>{evaluation_job_state}</var>"
   * @param {number} [request.pageSize]
   *   Optional. Requested page size. Server may return fewer results than
   *   requested. Default value is 100.
   * @param {string} [request.pageToken]
   *   Optional. A token identifying a page of results for the server to return.
   *   Typically obtained by the
   *   [nextPageToken][google.cloud.datalabeling.v1beta1.ListEvaluationJobsResponse.next_page_token] in the response
   *   to the previous request. The request returns the first page if this is
   *   empty.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [EvaluationJob]{@link google.cloud.datalabeling.v1beta1.EvaluationJob}.
   *   The client library support auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *
   *   When autoPaginate: false is specified through options, the array has three elements.
   *   The first element is Array of [EvaluationJob]{@link google.cloud.datalabeling.v1beta1.EvaluationJob} that corresponds to
   *   the one page received from the API server.
   *   If the second element is not null it contains the request object of type [ListEvaluationJobsRequest]{@link google.cloud.datalabeling.v1beta1.ListEvaluationJobsRequest}
   *   that can be used to obtain the next page of the results.
   *   If it is null, the next page does not exist.
   *   The third element contains the raw response received from the API server. Its type is
   *   [ListEvaluationJobsResponse]{@link google.cloud.datalabeling.v1beta1.ListEvaluationJobsResponse}.
   *
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  listEvaluationJobs(
    request: protosTypes.google.cloud.datalabeling.v1beta1.IListEvaluationJobsRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protosTypes.google.cloud.datalabeling.v1beta1.IEvaluationJob[],
          protosTypes.google.cloud.datalabeling.v1beta1.IListEvaluationJobsRequest | null,
          protosTypes.google.cloud.datalabeling.v1beta1.IListEvaluationJobsResponse
        >,
    callback?: Callback<
      protosTypes.google.cloud.datalabeling.v1beta1.IEvaluationJob[],
      protosTypes.google.cloud.datalabeling.v1beta1.IListEvaluationJobsRequest | null,
      protosTypes.google.cloud.datalabeling.v1beta1.IListEvaluationJobsResponse
    >
  ): Promise<
    [
      protosTypes.google.cloud.datalabeling.v1beta1.IEvaluationJob[],
      protosTypes.google.cloud.datalabeling.v1beta1.IListEvaluationJobsRequest | null,
      protosTypes.google.cloud.datalabeling.v1beta1.IListEvaluationJobsResponse
    ]
  > | void {
    request = request || {};
    let options: gax.CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as gax.CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = gax.routingHeader.fromParams({
      parent: request.parent || '',
    });
    return this._innerApiCalls.listEvaluationJobs(request, options, callback);
  }

  /**
   * Equivalent to {@link listEvaluationJobs}, but returns a NodeJS Stream object.
   *
   * This fetches the paged responses for {@link listEvaluationJobs} continuously
   * and invokes the callback registered for 'data' event for each element in the
   * responses.
   *
   * The returned object has 'end' method when no more elements are required.
   *
   * autoPaginate option will be ignored.
   *
   * @see {@link https://nodejs.org/api/stream.html}
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Evaluation job resource parent. Format:
   *   "projects/<var>{project_id}</var>"
   * @param {string} [request.filter]
   *   Optional. You can filter the jobs to list by model_id (also known as
   *   model_name, as described in
   *   [EvaluationJob.modelVersion][google.cloud.datalabeling.v1beta1.EvaluationJob.model_version]) or by
   *   evaluation job state (as described in [EvaluationJob.state][google.cloud.datalabeling.v1beta1.EvaluationJob.state]). To filter
   *   by both criteria, use the `AND` operator or the `OR` operator. For example,
   *   you can use the following string for your filter:
   *   "evaluation<span>_</span>job.model_id = <var>{model_name}</var> AND
   *   evaluation<span>_</span>job.state = <var>{evaluation_job_state}</var>"
   * @param {number} [request.pageSize]
   *   Optional. Requested page size. Server may return fewer results than
   *   requested. Default value is 100.
   * @param {string} [request.pageToken]
   *   Optional. A token identifying a page of results for the server to return.
   *   Typically obtained by the
   *   [nextPageToken][google.cloud.datalabeling.v1beta1.ListEvaluationJobsResponse.next_page_token] in the response
   *   to the previous request. The request returns the first page if this is
   *   empty.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [EvaluationJob]{@link google.cloud.datalabeling.v1beta1.EvaluationJob} on 'data' event.
   */
  listEvaluationJobsStream(
    request?: protosTypes.google.cloud.datalabeling.v1beta1.IListEvaluationJobsRequest,
    options?: gax.CallOptions | {}
  ): Transform {
    request = request || {};
    const callSettings = new gax.CallSettings(options);
    return this._descriptors.page.listEvaluationJobs.createStream(
      this._innerApiCalls.listEvaluationJobs as gax.GaxCall,
      request,
      callSettings
    );
  }
  // --------------------
  // -- Path templates --
  // --------------------

  /**
   * Return a fully-qualified project resource name string.
   *
   * @param {string} project
   * @returns {string} Resource name string.
   */
  projectPath(project: string) {
    return this._pathTemplates.projectPathTemplate.render({
      project,
    });
  }

  /**
   * Parse the project from Project resource.
   *
   * @param {string} projectName
   *   A fully-qualified path representing Project resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectName(projectName: string) {
    return this._pathTemplates.projectPathTemplate.match(projectName).project;
  }

  /**
   * Return a fully-qualified dataset resource name string.
   *
   * @param {string} project
   * @param {string} dataset
   * @returns {string} Resource name string.
   */
  datasetPath(project: string, dataset: string) {
    return this._pathTemplates.datasetPathTemplate.render({
      project,
      dataset,
    });
  }

  /**
   * Parse the project from Dataset resource.
   *
   * @param {string} datasetName
   *   A fully-qualified path representing Dataset resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromDatasetName(datasetName: string) {
    return this._pathTemplates.datasetPathTemplate.match(datasetName).project;
  }

  /**
   * Parse the dataset from Dataset resource.
   *
   * @param {string} datasetName
   *   A fully-qualified path representing Dataset resource.
   * @returns {string} A string representing the dataset.
   */
  matchDatasetFromDatasetName(datasetName: string) {
    return this._pathTemplates.datasetPathTemplate.match(datasetName).dataset;
  }

  /**
   * Return a fully-qualified annotateddataset resource name string.
   *
   * @param {string} project
   * @param {string} dataset
   * @returns {string} Resource name string.
   */
  annotatedDatasetPath(project: string, dataset: string) {
    return this._pathTemplates.annotateddatasetPathTemplate.render({
      project,
      dataset,
    });
  }

  /**
   * Parse the project from AnnotatedDataset resource.
   *
   * @param {string} annotateddatasetName
   *   A fully-qualified path representing AnnotatedDataset resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromAnnotatedDatasetName(annotateddatasetName: string) {
    return this._pathTemplates.annotateddatasetPathTemplate.match(
      annotateddatasetName
    ).project;
  }

  /**
   * Parse the dataset from AnnotatedDataset resource.
   *
   * @param {string} annotateddatasetName
   *   A fully-qualified path representing AnnotatedDataset resource.
   * @returns {string} A string representing the dataset.
   */
  matchDatasetFromAnnotatedDatasetName(annotateddatasetName: string) {
    return this._pathTemplates.annotateddatasetPathTemplate.match(
      annotateddatasetName
    ).dataset;
  }

  /**
   * Return a fully-qualified dataitem resource name string.
   *
   * @param {string} project
   * @param {string} dataset
   * @returns {string} Resource name string.
   */
  dataItemPath(project: string, dataset: string) {
    return this._pathTemplates.dataitemPathTemplate.render({
      project,
      dataset,
    });
  }

  /**
   * Parse the project from DataItem resource.
   *
   * @param {string} dataitemName
   *   A fully-qualified path representing DataItem resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromDataItemName(dataitemName: string) {
    return this._pathTemplates.dataitemPathTemplate.match(dataitemName).project;
  }

  /**
   * Parse the dataset from DataItem resource.
   *
   * @param {string} dataitemName
   *   A fully-qualified path representing DataItem resource.
   * @returns {string} A string representing the dataset.
   */
  matchDatasetFromDataItemName(dataitemName: string) {
    return this._pathTemplates.dataitemPathTemplate.match(dataitemName).dataset;
  }

  /**
   * Return a fully-qualified example resource name string.
   *
   * @param {string} project
   * @param {string} dataset
   * @param {string} example
   * @returns {string} Resource name string.
   */
  examplePath(project: string, dataset: string, example: string) {
    return this._pathTemplates.examplePathTemplate.render({
      project,
      dataset,
      example,
    });
  }

  /**
   * Parse the project from Example resource.
   *
   * @param {string} exampleName
   *   A fully-qualified path representing Example resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromExampleName(exampleName: string) {
    return this._pathTemplates.examplePathTemplate.match(exampleName).project;
  }

  /**
   * Parse the dataset from Example resource.
   *
   * @param {string} exampleName
   *   A fully-qualified path representing Example resource.
   * @returns {string} A string representing the dataset.
   */
  matchDatasetFromExampleName(exampleName: string) {
    return this._pathTemplates.examplePathTemplate.match(exampleName).dataset;
  }

  /**
   * Parse the example from Example resource.
   *
   * @param {string} exampleName
   *   A fully-qualified path representing Example resource.
   * @returns {string} A string representing the example.
   */
  matchExampleFromExampleName(exampleName: string) {
    return this._pathTemplates.examplePathTemplate.match(exampleName).example;
  }

  /**
   * Return a fully-qualified annotationspecset resource name string.
   *
   * @param {string} project
   * @returns {string} Resource name string.
   */
  annotationSpecSetPath(project: string) {
    return this._pathTemplates.annotationspecsetPathTemplate.render({
      project,
    });
  }

  /**
   * Parse the project from AnnotationSpecSet resource.
   *
   * @param {string} annotationspecsetName
   *   A fully-qualified path representing AnnotationSpecSet resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromAnnotationSpecSetName(annotationspecsetName: string) {
    return this._pathTemplates.annotationspecsetPathTemplate.match(
      annotationspecsetName
    ).project;
  }

  /**
   * Return a fully-qualified instruction resource name string.
   *
   * @param {string} project
   * @param {string} instruction
   * @returns {string} Resource name string.
   */
  instructionPath(project: string, instruction: string) {
    return this._pathTemplates.instructionPathTemplate.render({
      project,
      instruction,
    });
  }

  /**
   * Parse the project from Instruction resource.
   *
   * @param {string} instructionName
   *   A fully-qualified path representing Instruction resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromInstructionName(instructionName: string) {
    return this._pathTemplates.instructionPathTemplate.match(instructionName)
      .project;
  }

  /**
   * Parse the instruction from Instruction resource.
   *
   * @param {string} instructionName
   *   A fully-qualified path representing Instruction resource.
   * @returns {string} A string representing the instruction.
   */
  matchInstructionFromInstructionName(instructionName: string) {
    return this._pathTemplates.instructionPathTemplate.match(instructionName)
      .instruction;
  }

  /**
   * Return a fully-qualified evaluation resource name string.
   *
   * @param {string} project
   * @param {string} dataset
   * @param {string} evaluation
   * @returns {string} Resource name string.
   */
  evaluationPath(project: string, dataset: string, evaluation: string) {
    return this._pathTemplates.evaluationPathTemplate.render({
      project,
      dataset,
      evaluation,
    });
  }

  /**
   * Parse the project from Evaluation resource.
   *
   * @param {string} evaluationName
   *   A fully-qualified path representing Evaluation resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromEvaluationName(evaluationName: string) {
    return this._pathTemplates.evaluationPathTemplate.match(evaluationName)
      .project;
  }

  /**
   * Parse the dataset from Evaluation resource.
   *
   * @param {string} evaluationName
   *   A fully-qualified path representing Evaluation resource.
   * @returns {string} A string representing the dataset.
   */
  matchDatasetFromEvaluationName(evaluationName: string) {
    return this._pathTemplates.evaluationPathTemplate.match(evaluationName)
      .dataset;
  }

  /**
   * Parse the evaluation from Evaluation resource.
   *
   * @param {string} evaluationName
   *   A fully-qualified path representing Evaluation resource.
   * @returns {string} A string representing the evaluation.
   */
  matchEvaluationFromEvaluationName(evaluationName: string) {
    return this._pathTemplates.evaluationPathTemplate.match(evaluationName)
      .evaluation;
  }

  /**
   * Return a fully-qualified evaluationjob resource name string.
   *
   * @param {string} project
   * @returns {string} Resource name string.
   */
  evaluationJobPath(project: string) {
    return this._pathTemplates.evaluationjobPathTemplate.render({
      project,
    });
  }

  /**
   * Parse the project from EvaluationJob resource.
   *
   * @param {string} evaluationjobName
   *   A fully-qualified path representing EvaluationJob resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromEvaluationJobName(evaluationjobName: string) {
    return this._pathTemplates.evaluationjobPathTemplate.match(
      evaluationjobName
    ).project;
  }

  /**
   * Terminate the GRPC channel and close the client.
   *
   * The client will no longer be usable and all future behavior is undefined.
   */
  close(): Promise<void> {
    if (!this._terminated) {
      return this.dataLabelingServiceStub.then(stub => {
        this._terminated = true;
        stub.close();
      });
    }
    return Promise.resolve();
  }
}
